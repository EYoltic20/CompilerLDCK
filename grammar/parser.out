Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTE_BOOL

Grammar

Rule 0     S' -> empezar
Rule 1     empezar -> PROGRAM ID SEMICOMMA var_or_func END
Rule 2     var_or_func -> vars func_create
Rule 3     var_or_func -> func_create
Rule 4     func_create -> funcs func_create
Rule 5     func_create -> EMPTY
Rule 6     funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA
Rule 7     body -> LBRACE statment RBRACE
Rule 8     statment -> assign statment
Rule 9     statment -> assign
Rule 10    statment -> conditions
Rule 11    statment -> conditions statment
Rule 12    statment -> fcall
Rule 13    statment -> fcall statment
Rule 14    statment -> imprimir statment
Rule 15    statment -> imprimir
Rule 16    statment -> cycle statment
Rule 17    statment -> cycle
Rule 18    statment -> vars
Rule 19    statment -> vars statment
Rule 20    statment -> EMPTY
Rule 21    assign -> ID EQ expression SEMICOMMA
Rule 22    cte -> CTE_INT
Rule 23    cte -> CTE_FLOAT PUNTO CTE_INT
Rule 24    func_vars -> ID DOUBLEPOINT type func_vars
Rule 25    func_vars -> COMMA func_vars
Rule 26    func_vars -> EMPTY
Rule 27    expression -> expression PLUS expression
Rule 28    expression -> expression MINUS expression
Rule 29    expression -> expression TIMES expression
Rule 30    expression -> expression DIVIDE expression
Rule 31    expression -> expression GT expression
Rule 32    expression -> expression GTE expression
Rule 33    expression -> expression LT expression
Rule 34    expression -> expression LTE expression
Rule 35    expression -> expression NT expression
Rule 36    expression -> factor
Rule 37    expression -> cte
Rule 38    factor -> LPAR expression RPAR
Rule 39    factor -> ID
Rule 40    factor -> cte
Rule 41    cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA
Rule 42    fcall -> ID LPAR list_exp RPAR SEMICOMMA
Rule 43    list_exp -> expression list_exp
Rule 44    list_exp -> EMPTY
Rule 45    list_exp -> COMMA list_exp
Rule 46    id_cte -> ID
Rule 47    id_cte -> cte
Rule 48    conditions -> IF LPAR expression RPAR body haselse SEMICOMMA
Rule 49    haselse -> ELSE body
Rule 50    haselse -> EMPTY
Rule 51    imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA
Rule 52    lst_printing_options -> CTE_STRING COMMA lst_printing_options
Rule 53    lst_printing_options -> expression
Rule 54    lst_printing_options -> expression COMMA lst_printing_options
Rule 55    lst_printing_options -> vars
Rule 56    lst_printing_options -> vars COMMA lst_printing_options
Rule 57    lst_printing_options -> CTE_STRING
Rule 58    vars -> VAR lst_var
Rule 59    lst_var -> lst_id DOUBLEPOINT type SEMICOMMA
Rule 60    lst_id -> ID lst_id
Rule 61    lst_id -> COMMA lst_id
Rule 62    lst_id -> EMPTY
Rule 63    type -> INT
Rule 64    type -> FLOAT
Rule 65    EMPTY -> <empty>

Terminals, with rules where they appear

COMMA                : 25 45 52 54 56 61
CTE_BOOL             : 
CTE_FLOAT            : 23
CTE_INT              : 22 23
CTE_STRING           : 52 57
DIVIDE               : 30
DO                   : 41
DOUBLEPOINT          : 24 59
ELSE                 : 49
END                  : 1
EQ                   : 21
FLOAT                : 64
GT                   : 31
GTE                  : 32
ID                   : 1 6 21 24 39 42 46 60
IF                   : 48
INT                  : 63
LBRACE               : 7
LPAR                 : 6 38 41 42 48 51
LT                   : 33
LTE                  : 34
MINUS                : 28
NT                   : 35
PLUS                 : 27
PRINT                : 51
PROGRAM              : 1
PUNTO                : 23
RBRACE               : 7
RPAR                 : 6 38 41 42 48 51
SEMICOMMA            : 1 6 21 41 42 48 51 59
TIMES                : 29
VAR                  : 58
VOID                 : 6
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

EMPTY                : 5 20 26 44 50 62
assign               : 8 9
body                 : 6 41 48 49
conditions           : 10 11
cte                  : 37 40 47
cycle                : 16 17
empezar              : 0
expression           : 21 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 38 41 43 48 53 54
factor               : 36
fcall                : 12 13
func_create          : 2 3 4
func_vars            : 6 24 25
funcs                : 4
haselse              : 48
id_cte               : 
imprimir             : 14 15
list_exp             : 42 43 45
lst_id               : 59 60 61
lst_printing_options : 51 52 54 56
lst_var              : 58
statment             : 7 8 11 13 14 16 19
type                 : 24 59
var_or_func          : 1
vars                 : 2 18 19 55 56

Parsing method: LALR

state 0

    (0) S' -> . empezar
    (1) empezar -> . PROGRAM ID SEMICOMMA var_or_func END

    PROGRAM         shift and go to state 2

    empezar                        shift and go to state 1

state 1

    (0) S' -> empezar .



state 2

    (1) empezar -> PROGRAM . ID SEMICOMMA var_or_func END

    ID              shift and go to state 3


state 3

    (1) empezar -> PROGRAM ID . SEMICOMMA var_or_func END

    SEMICOMMA       shift and go to state 4


state 4

    (1) empezar -> PROGRAM ID SEMICOMMA . var_or_func END
    (2) var_or_func -> . vars func_create
    (3) var_or_func -> . func_create
    (58) vars -> . VAR lst_var
    (4) func_create -> . funcs func_create
    (5) func_create -> . EMPTY
    (6) funcs -> . VOID ID LPAR func_vars RPAR body SEMICOMMA
    (65) EMPTY -> .

    VAR             shift and go to state 8
    VOID            shift and go to state 11
    END             reduce using rule 65 (EMPTY -> .)

    var_or_func                    shift and go to state 5
    vars                           shift and go to state 6
    func_create                    shift and go to state 7
    funcs                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 5

    (1) empezar -> PROGRAM ID SEMICOMMA var_or_func . END

    END             shift and go to state 12


state 6

    (2) var_or_func -> vars . func_create
    (4) func_create -> . funcs func_create
    (5) func_create -> . EMPTY
    (6) funcs -> . VOID ID LPAR func_vars RPAR body SEMICOMMA
    (65) EMPTY -> .

    VOID            shift and go to state 11
    END             reduce using rule 65 (EMPTY -> .)

    func_create                    shift and go to state 13
    funcs                          shift and go to state 9
    EMPTY                          shift and go to state 10

state 7

    (3) var_or_func -> func_create .

    END             reduce using rule 3 (var_or_func -> func_create .)


state 8

    (58) vars -> VAR . lst_var
    (59) lst_var -> . lst_id DOUBLEPOINT type SEMICOMMA
    (60) lst_id -> . ID lst_id
    (61) lst_id -> . COMMA lst_id
    (62) lst_id -> . EMPTY
    (65) EMPTY -> .

    ID              shift and go to state 16
    COMMA           shift and go to state 17
    DOUBLEPOINT     reduce using rule 65 (EMPTY -> .)

    lst_var                        shift and go to state 14
    lst_id                         shift and go to state 15
    EMPTY                          shift and go to state 18

state 9

    (4) func_create -> funcs . func_create
    (4) func_create -> . funcs func_create
    (5) func_create -> . EMPTY
    (6) funcs -> . VOID ID LPAR func_vars RPAR body SEMICOMMA
    (65) EMPTY -> .

    VOID            shift and go to state 11
    END             reduce using rule 65 (EMPTY -> .)

    funcs                          shift and go to state 9
    func_create                    shift and go to state 19
    EMPTY                          shift and go to state 10

state 10

    (5) func_create -> EMPTY .

    END             reduce using rule 5 (func_create -> EMPTY .)


state 11

    (6) funcs -> VOID . ID LPAR func_vars RPAR body SEMICOMMA

    ID              shift and go to state 20


state 12

    (1) empezar -> PROGRAM ID SEMICOMMA var_or_func END .

    $end            reduce using rule 1 (empezar -> PROGRAM ID SEMICOMMA var_or_func END .)


state 13

    (2) var_or_func -> vars func_create .

    END             reduce using rule 2 (var_or_func -> vars func_create .)


state 14

    (58) vars -> VAR lst_var .

    VOID            reduce using rule 58 (vars -> VAR lst_var .)
    END             reduce using rule 58 (vars -> VAR lst_var .)
    ID              reduce using rule 58 (vars -> VAR lst_var .)
    IF              reduce using rule 58 (vars -> VAR lst_var .)
    PRINT           reduce using rule 58 (vars -> VAR lst_var .)
    WHILE           reduce using rule 58 (vars -> VAR lst_var .)
    VAR             reduce using rule 58 (vars -> VAR lst_var .)
    RBRACE          reduce using rule 58 (vars -> VAR lst_var .)
    COMMA           reduce using rule 58 (vars -> VAR lst_var .)
    RPAR            reduce using rule 58 (vars -> VAR lst_var .)


state 15

    (59) lst_var -> lst_id . DOUBLEPOINT type SEMICOMMA

    DOUBLEPOINT     shift and go to state 21


state 16

    (60) lst_id -> ID . lst_id
    (60) lst_id -> . ID lst_id
    (61) lst_id -> . COMMA lst_id
    (62) lst_id -> . EMPTY
    (65) EMPTY -> .

    ID              shift and go to state 16
    COMMA           shift and go to state 17
    DOUBLEPOINT     reduce using rule 65 (EMPTY -> .)

    lst_id                         shift and go to state 22
    EMPTY                          shift and go to state 18

state 17

    (61) lst_id -> COMMA . lst_id
    (60) lst_id -> . ID lst_id
    (61) lst_id -> . COMMA lst_id
    (62) lst_id -> . EMPTY
    (65) EMPTY -> .

    ID              shift and go to state 16
    COMMA           shift and go to state 17
    DOUBLEPOINT     reduce using rule 65 (EMPTY -> .)

    lst_id                         shift and go to state 23
    EMPTY                          shift and go to state 18

state 18

    (62) lst_id -> EMPTY .

    DOUBLEPOINT     reduce using rule 62 (lst_id -> EMPTY .)


state 19

    (4) func_create -> funcs func_create .

    END             reduce using rule 4 (func_create -> funcs func_create .)


state 20

    (6) funcs -> VOID ID . LPAR func_vars RPAR body SEMICOMMA

    LPAR            shift and go to state 24


state 21

    (59) lst_var -> lst_id DOUBLEPOINT . type SEMICOMMA
    (63) type -> . INT
    (64) type -> . FLOAT

    INT             shift and go to state 26
    FLOAT           shift and go to state 27

    type                           shift and go to state 25

state 22

    (60) lst_id -> ID lst_id .

    DOUBLEPOINT     reduce using rule 60 (lst_id -> ID lst_id .)


state 23

    (61) lst_id -> COMMA lst_id .

    DOUBLEPOINT     reduce using rule 61 (lst_id -> COMMA lst_id .)


state 24

    (6) funcs -> VOID ID LPAR . func_vars RPAR body SEMICOMMA
    (24) func_vars -> . ID DOUBLEPOINT type func_vars
    (25) func_vars -> . COMMA func_vars
    (26) func_vars -> . EMPTY
    (65) EMPTY -> .

    ID              shift and go to state 28
    COMMA           shift and go to state 30
    RPAR            reduce using rule 65 (EMPTY -> .)

    func_vars                      shift and go to state 29
    EMPTY                          shift and go to state 31

state 25

    (59) lst_var -> lst_id DOUBLEPOINT type . SEMICOMMA

    SEMICOMMA       shift and go to state 32


state 26

    (63) type -> INT .

    SEMICOMMA       reduce using rule 63 (type -> INT .)
    ID              reduce using rule 63 (type -> INT .)
    COMMA           reduce using rule 63 (type -> INT .)
    RPAR            reduce using rule 63 (type -> INT .)


state 27

    (64) type -> FLOAT .

    SEMICOMMA       reduce using rule 64 (type -> FLOAT .)
    ID              reduce using rule 64 (type -> FLOAT .)
    COMMA           reduce using rule 64 (type -> FLOAT .)
    RPAR            reduce using rule 64 (type -> FLOAT .)


state 28

    (24) func_vars -> ID . DOUBLEPOINT type func_vars

    DOUBLEPOINT     shift and go to state 33


state 29

    (6) funcs -> VOID ID LPAR func_vars . RPAR body SEMICOMMA

    RPAR            shift and go to state 34


state 30

    (25) func_vars -> COMMA . func_vars
    (24) func_vars -> . ID DOUBLEPOINT type func_vars
    (25) func_vars -> . COMMA func_vars
    (26) func_vars -> . EMPTY
    (65) EMPTY -> .

    ID              shift and go to state 28
    COMMA           shift and go to state 30
    RPAR            reduce using rule 65 (EMPTY -> .)

    func_vars                      shift and go to state 35
    EMPTY                          shift and go to state 31

state 31

    (26) func_vars -> EMPTY .

    RPAR            reduce using rule 26 (func_vars -> EMPTY .)


state 32

    (59) lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .

    VOID            reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    END             reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    ID              reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    IF              reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    PRINT           reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    WHILE           reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    VAR             reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    RBRACE          reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    COMMA           reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)
    RPAR            reduce using rule 59 (lst_var -> lst_id DOUBLEPOINT type SEMICOMMA .)


state 33

    (24) func_vars -> ID DOUBLEPOINT . type func_vars
    (63) type -> . INT
    (64) type -> . FLOAT

    INT             shift and go to state 26
    FLOAT           shift and go to state 27

    type                           shift and go to state 36

state 34

    (6) funcs -> VOID ID LPAR func_vars RPAR . body SEMICOMMA
    (7) body -> . LBRACE statment RBRACE

    LBRACE          shift and go to state 38

    body                           shift and go to state 37

state 35

    (25) func_vars -> COMMA func_vars .

    RPAR            reduce using rule 25 (func_vars -> COMMA func_vars .)


state 36

    (24) func_vars -> ID DOUBLEPOINT type . func_vars
    (24) func_vars -> . ID DOUBLEPOINT type func_vars
    (25) func_vars -> . COMMA func_vars
    (26) func_vars -> . EMPTY
    (65) EMPTY -> .

    ID              shift and go to state 28
    COMMA           shift and go to state 30
    RPAR            reduce using rule 65 (EMPTY -> .)

    func_vars                      shift and go to state 39
    EMPTY                          shift and go to state 31

state 37

    (6) funcs -> VOID ID LPAR func_vars RPAR body . SEMICOMMA

    SEMICOMMA       shift and go to state 40


state 38

    (7) body -> LBRACE . statment RBRACE
    (8) statment -> . assign statment
    (9) statment -> . assign
    (10) statment -> . conditions
    (11) statment -> . conditions statment
    (12) statment -> . fcall
    (13) statment -> . fcall statment
    (14) statment -> . imprimir statment
    (15) statment -> . imprimir
    (16) statment -> . cycle statment
    (17) statment -> . cycle
    (18) statment -> . vars
    (19) statment -> . vars statment
    (20) statment -> . EMPTY
    (21) assign -> . ID EQ expression SEMICOMMA
    (48) conditions -> . IF LPAR expression RPAR body haselse SEMICOMMA
    (42) fcall -> . ID LPAR list_exp RPAR SEMICOMMA
    (51) imprimir -> . PRINT LPAR lst_printing_options RPAR SEMICOMMA
    (41) cycle -> . WHILE LPAR expression RPAR DO body SEMICOMMA
    (58) vars -> . VAR lst_var
    (65) EMPTY -> .

    ID              shift and go to state 49
    IF              shift and go to state 50
    PRINT           shift and go to state 51
    WHILE           shift and go to state 52
    VAR             shift and go to state 8
    RBRACE          reduce using rule 65 (EMPTY -> .)

    statment                       shift and go to state 41
    assign                         shift and go to state 42
    conditions                     shift and go to state 43
    fcall                          shift and go to state 44
    imprimir                       shift and go to state 45
    cycle                          shift and go to state 46
    vars                           shift and go to state 47
    EMPTY                          shift and go to state 48

state 39

    (24) func_vars -> ID DOUBLEPOINT type func_vars .

    RPAR            reduce using rule 24 (func_vars -> ID DOUBLEPOINT type func_vars .)


state 40

    (6) funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA .

    VOID            reduce using rule 6 (funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA .)
    END             reduce using rule 6 (funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA .)


state 41

    (7) body -> LBRACE statment . RBRACE

    RBRACE          shift and go to state 53


state 42

    (8) statment -> assign . statment
    (9) statment -> assign .
    (8) statment -> . assign statment
    (9) statment -> . assign
    (10) statment -> . conditions
    (11) statment -> . conditions statment
    (12) statment -> . fcall
    (13) statment -> . fcall statment
    (14) statment -> . imprimir statment
    (15) statment -> . imprimir
    (16) statment -> . cycle statment
    (17) statment -> . cycle
    (18) statment -> . vars
    (19) statment -> . vars statment
    (20) statment -> . EMPTY
    (21) assign -> . ID EQ expression SEMICOMMA
    (48) conditions -> . IF LPAR expression RPAR body haselse SEMICOMMA
    (42) fcall -> . ID LPAR list_exp RPAR SEMICOMMA
    (51) imprimir -> . PRINT LPAR lst_printing_options RPAR SEMICOMMA
    (41) cycle -> . WHILE LPAR expression RPAR DO body SEMICOMMA
    (58) vars -> . VAR lst_var
    (65) EMPTY -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 9 (statment -> assign .)
    RBRACE          reduce using rule 9 (statment -> assign .)
    ID              shift and go to state 49
    IF              shift and go to state 50
    PRINT           shift and go to state 51
    WHILE           shift and go to state 52
    VAR             shift and go to state 8

  ! RBRACE          [ reduce using rule 65 (EMPTY -> .) ]

    assign                         shift and go to state 42
    statment                       shift and go to state 54
    conditions                     shift and go to state 43
    fcall                          shift and go to state 44
    imprimir                       shift and go to state 45
    cycle                          shift and go to state 46
    vars                           shift and go to state 47
    EMPTY                          shift and go to state 48

state 43

    (10) statment -> conditions .
    (11) statment -> conditions . statment
    (8) statment -> . assign statment
    (9) statment -> . assign
    (10) statment -> . conditions
    (11) statment -> . conditions statment
    (12) statment -> . fcall
    (13) statment -> . fcall statment
    (14) statment -> . imprimir statment
    (15) statment -> . imprimir
    (16) statment -> . cycle statment
    (17) statment -> . cycle
    (18) statment -> . vars
    (19) statment -> . vars statment
    (20) statment -> . EMPTY
    (21) assign -> . ID EQ expression SEMICOMMA
    (48) conditions -> . IF LPAR expression RPAR body haselse SEMICOMMA
    (42) fcall -> . ID LPAR list_exp RPAR SEMICOMMA
    (51) imprimir -> . PRINT LPAR lst_printing_options RPAR SEMICOMMA
    (41) cycle -> . WHILE LPAR expression RPAR DO body SEMICOMMA
    (58) vars -> . VAR lst_var
    (65) EMPTY -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 10 (statment -> conditions .)
    RBRACE          reduce using rule 10 (statment -> conditions .)
    ID              shift and go to state 49
    IF              shift and go to state 50
    PRINT           shift and go to state 51
    WHILE           shift and go to state 52
    VAR             shift and go to state 8

  ! RBRACE          [ reduce using rule 65 (EMPTY -> .) ]

    conditions                     shift and go to state 43
    statment                       shift and go to state 55
    assign                         shift and go to state 42
    fcall                          shift and go to state 44
    imprimir                       shift and go to state 45
    cycle                          shift and go to state 46
    vars                           shift and go to state 47
    EMPTY                          shift and go to state 48

state 44

    (12) statment -> fcall .
    (13) statment -> fcall . statment
    (8) statment -> . assign statment
    (9) statment -> . assign
    (10) statment -> . conditions
    (11) statment -> . conditions statment
    (12) statment -> . fcall
    (13) statment -> . fcall statment
    (14) statment -> . imprimir statment
    (15) statment -> . imprimir
    (16) statment -> . cycle statment
    (17) statment -> . cycle
    (18) statment -> . vars
    (19) statment -> . vars statment
    (20) statment -> . EMPTY
    (21) assign -> . ID EQ expression SEMICOMMA
    (48) conditions -> . IF LPAR expression RPAR body haselse SEMICOMMA
    (42) fcall -> . ID LPAR list_exp RPAR SEMICOMMA
    (51) imprimir -> . PRINT LPAR lst_printing_options RPAR SEMICOMMA
    (41) cycle -> . WHILE LPAR expression RPAR DO body SEMICOMMA
    (58) vars -> . VAR lst_var
    (65) EMPTY -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 12 (statment -> fcall .)
    RBRACE          reduce using rule 12 (statment -> fcall .)
    ID              shift and go to state 49
    IF              shift and go to state 50
    PRINT           shift and go to state 51
    WHILE           shift and go to state 52
    VAR             shift and go to state 8

  ! RBRACE          [ reduce using rule 65 (EMPTY -> .) ]

    fcall                          shift and go to state 44
    statment                       shift and go to state 56
    assign                         shift and go to state 42
    conditions                     shift and go to state 43
    imprimir                       shift and go to state 45
    cycle                          shift and go to state 46
    vars                           shift and go to state 47
    EMPTY                          shift and go to state 48

state 45

    (14) statment -> imprimir . statment
    (15) statment -> imprimir .
    (8) statment -> . assign statment
    (9) statment -> . assign
    (10) statment -> . conditions
    (11) statment -> . conditions statment
    (12) statment -> . fcall
    (13) statment -> . fcall statment
    (14) statment -> . imprimir statment
    (15) statment -> . imprimir
    (16) statment -> . cycle statment
    (17) statment -> . cycle
    (18) statment -> . vars
    (19) statment -> . vars statment
    (20) statment -> . EMPTY
    (21) assign -> . ID EQ expression SEMICOMMA
    (48) conditions -> . IF LPAR expression RPAR body haselse SEMICOMMA
    (42) fcall -> . ID LPAR list_exp RPAR SEMICOMMA
    (51) imprimir -> . PRINT LPAR lst_printing_options RPAR SEMICOMMA
    (41) cycle -> . WHILE LPAR expression RPAR DO body SEMICOMMA
    (58) vars -> . VAR lst_var
    (65) EMPTY -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 15 (statment -> imprimir .)
    RBRACE          reduce using rule 15 (statment -> imprimir .)
    ID              shift and go to state 49
    IF              shift and go to state 50
    PRINT           shift and go to state 51
    WHILE           shift and go to state 52
    VAR             shift and go to state 8

  ! RBRACE          [ reduce using rule 65 (EMPTY -> .) ]

    imprimir                       shift and go to state 45
    statment                       shift and go to state 57
    assign                         shift and go to state 42
    conditions                     shift and go to state 43
    fcall                          shift and go to state 44
    cycle                          shift and go to state 46
    vars                           shift and go to state 47
    EMPTY                          shift and go to state 48

state 46

    (16) statment -> cycle . statment
    (17) statment -> cycle .
    (8) statment -> . assign statment
    (9) statment -> . assign
    (10) statment -> . conditions
    (11) statment -> . conditions statment
    (12) statment -> . fcall
    (13) statment -> . fcall statment
    (14) statment -> . imprimir statment
    (15) statment -> . imprimir
    (16) statment -> . cycle statment
    (17) statment -> . cycle
    (18) statment -> . vars
    (19) statment -> . vars statment
    (20) statment -> . EMPTY
    (21) assign -> . ID EQ expression SEMICOMMA
    (48) conditions -> . IF LPAR expression RPAR body haselse SEMICOMMA
    (42) fcall -> . ID LPAR list_exp RPAR SEMICOMMA
    (51) imprimir -> . PRINT LPAR lst_printing_options RPAR SEMICOMMA
    (41) cycle -> . WHILE LPAR expression RPAR DO body SEMICOMMA
    (58) vars -> . VAR lst_var
    (65) EMPTY -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 17 (statment -> cycle .)
    RBRACE          reduce using rule 17 (statment -> cycle .)
    ID              shift and go to state 49
    IF              shift and go to state 50
    PRINT           shift and go to state 51
    WHILE           shift and go to state 52
    VAR             shift and go to state 8

  ! RBRACE          [ reduce using rule 65 (EMPTY -> .) ]

    cycle                          shift and go to state 46
    statment                       shift and go to state 58
    assign                         shift and go to state 42
    conditions                     shift and go to state 43
    fcall                          shift and go to state 44
    imprimir                       shift and go to state 45
    vars                           shift and go to state 47
    EMPTY                          shift and go to state 48

state 47

    (18) statment -> vars .
    (19) statment -> vars . statment
    (8) statment -> . assign statment
    (9) statment -> . assign
    (10) statment -> . conditions
    (11) statment -> . conditions statment
    (12) statment -> . fcall
    (13) statment -> . fcall statment
    (14) statment -> . imprimir statment
    (15) statment -> . imprimir
    (16) statment -> . cycle statment
    (17) statment -> . cycle
    (18) statment -> . vars
    (19) statment -> . vars statment
    (20) statment -> . EMPTY
    (21) assign -> . ID EQ expression SEMICOMMA
    (48) conditions -> . IF LPAR expression RPAR body haselse SEMICOMMA
    (42) fcall -> . ID LPAR list_exp RPAR SEMICOMMA
    (51) imprimir -> . PRINT LPAR lst_printing_options RPAR SEMICOMMA
    (41) cycle -> . WHILE LPAR expression RPAR DO body SEMICOMMA
    (58) vars -> . VAR lst_var
    (65) EMPTY -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 18 (statment -> vars .)
    RBRACE          reduce using rule 18 (statment -> vars .)
    ID              shift and go to state 49
    IF              shift and go to state 50
    PRINT           shift and go to state 51
    WHILE           shift and go to state 52
    VAR             shift and go to state 8

  ! RBRACE          [ reduce using rule 65 (EMPTY -> .) ]

    vars                           shift and go to state 47
    statment                       shift and go to state 59
    assign                         shift and go to state 42
    conditions                     shift and go to state 43
    fcall                          shift and go to state 44
    imprimir                       shift and go to state 45
    cycle                          shift and go to state 46
    EMPTY                          shift and go to state 48

state 48

    (20) statment -> EMPTY .

    RBRACE          reduce using rule 20 (statment -> EMPTY .)


state 49

    (21) assign -> ID . EQ expression SEMICOMMA
    (42) fcall -> ID . LPAR list_exp RPAR SEMICOMMA

    EQ              shift and go to state 60
    LPAR            shift and go to state 61


state 50

    (48) conditions -> IF . LPAR expression RPAR body haselse SEMICOMMA

    LPAR            shift and go to state 62


state 51

    (51) imprimir -> PRINT . LPAR lst_printing_options RPAR SEMICOMMA

    LPAR            shift and go to state 63


state 52

    (41) cycle -> WHILE . LPAR expression RPAR DO body SEMICOMMA

    LPAR            shift and go to state 64


state 53

    (7) body -> LBRACE statment RBRACE .

    SEMICOMMA       reduce using rule 7 (body -> LBRACE statment RBRACE .)
    ELSE            reduce using rule 7 (body -> LBRACE statment RBRACE .)


state 54

    (8) statment -> assign statment .

    RBRACE          reduce using rule 8 (statment -> assign statment .)


state 55

    (11) statment -> conditions statment .

    RBRACE          reduce using rule 11 (statment -> conditions statment .)


state 56

    (13) statment -> fcall statment .

    RBRACE          reduce using rule 13 (statment -> fcall statment .)


state 57

    (14) statment -> imprimir statment .

    RBRACE          reduce using rule 14 (statment -> imprimir statment .)


state 58

    (16) statment -> cycle statment .

    RBRACE          reduce using rule 16 (statment -> cycle statment .)


state 59

    (19) statment -> vars statment .

    RBRACE          reduce using rule 19 (statment -> vars statment .)


state 60

    (21) assign -> ID EQ . expression SEMICOMMA
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 66
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 61

    (42) fcall -> ID LPAR . list_exp RPAR SEMICOMMA
    (43) list_exp -> . expression list_exp
    (44) list_exp -> . EMPTY
    (45) list_exp -> . COMMA list_exp
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (65) EMPTY -> .
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    COMMA           shift and go to state 75
    RPAR            reduce using rule 65 (EMPTY -> .)
    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    list_exp                       shift and go to state 72
    expression                     shift and go to state 73
    EMPTY                          shift and go to state 74
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 62

    (48) conditions -> IF LPAR . expression RPAR body haselse SEMICOMMA
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 76
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 63

    (51) imprimir -> PRINT LPAR . lst_printing_options RPAR SEMICOMMA
    (52) lst_printing_options -> . CTE_STRING COMMA lst_printing_options
    (53) lst_printing_options -> . expression
    (54) lst_printing_options -> . expression COMMA lst_printing_options
    (55) lst_printing_options -> . vars
    (56) lst_printing_options -> . vars COMMA lst_printing_options
    (57) lst_printing_options -> . CTE_STRING
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (58) vars -> . VAR lst_var
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    CTE_STRING      shift and go to state 78
    VAR             shift and go to state 8
    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    lst_printing_options           shift and go to state 77
    expression                     shift and go to state 79
    vars                           shift and go to state 80
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 64

    (41) cycle -> WHILE LPAR . expression RPAR DO body SEMICOMMA
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 81
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 65

    (39) factor -> ID .

    SEMICOMMA       reduce using rule 39 (factor -> ID .)
    PLUS            reduce using rule 39 (factor -> ID .)
    MINUS           reduce using rule 39 (factor -> ID .)
    TIMES           reduce using rule 39 (factor -> ID .)
    DIVIDE          reduce using rule 39 (factor -> ID .)
    GT              reduce using rule 39 (factor -> ID .)
    GTE             reduce using rule 39 (factor -> ID .)
    LT              reduce using rule 39 (factor -> ID .)
    LTE             reduce using rule 39 (factor -> ID .)
    NT              reduce using rule 39 (factor -> ID .)
    COMMA           reduce using rule 39 (factor -> ID .)
    LPAR            reduce using rule 39 (factor -> ID .)
    ID              reduce using rule 39 (factor -> ID .)
    CTE_INT         reduce using rule 39 (factor -> ID .)
    CTE_FLOAT       reduce using rule 39 (factor -> ID .)
    RPAR            reduce using rule 39 (factor -> ID .)


state 66

    (21) assign -> ID EQ expression . SEMICOMMA
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    SEMICOMMA       shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91


state 67

    (36) expression -> factor .

    SEMICOMMA       reduce using rule 36 (expression -> factor .)
    PLUS            reduce using rule 36 (expression -> factor .)
    MINUS           reduce using rule 36 (expression -> factor .)
    TIMES           reduce using rule 36 (expression -> factor .)
    DIVIDE          reduce using rule 36 (expression -> factor .)
    GT              reduce using rule 36 (expression -> factor .)
    GTE             reduce using rule 36 (expression -> factor .)
    LT              reduce using rule 36 (expression -> factor .)
    LTE             reduce using rule 36 (expression -> factor .)
    NT              reduce using rule 36 (expression -> factor .)
    COMMA           reduce using rule 36 (expression -> factor .)
    LPAR            reduce using rule 36 (expression -> factor .)
    ID              reduce using rule 36 (expression -> factor .)
    CTE_INT         reduce using rule 36 (expression -> factor .)
    CTE_FLOAT       reduce using rule 36 (expression -> factor .)
    RPAR            reduce using rule 36 (expression -> factor .)


state 68

    (37) expression -> cte .
    (40) factor -> cte .

  ! reduce/reduce conflict for SEMICOMMA resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for PLUS resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for MINUS resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for TIMES resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for GT resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for GTE resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for LT resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for LTE resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for NT resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for COMMA resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for LPAR resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for ID resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for CTE_INT resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for CTE_FLOAT resolved using rule 37 (expression -> cte .)
  ! reduce/reduce conflict for RPAR resolved using rule 37 (expression -> cte .)
    SEMICOMMA       reduce using rule 37 (expression -> cte .)
    PLUS            reduce using rule 37 (expression -> cte .)
    MINUS           reduce using rule 37 (expression -> cte .)
    TIMES           reduce using rule 37 (expression -> cte .)
    DIVIDE          reduce using rule 37 (expression -> cte .)
    GT              reduce using rule 37 (expression -> cte .)
    GTE             reduce using rule 37 (expression -> cte .)
    LT              reduce using rule 37 (expression -> cte .)
    LTE             reduce using rule 37 (expression -> cte .)
    NT              reduce using rule 37 (expression -> cte .)
    COMMA           reduce using rule 37 (expression -> cte .)
    LPAR            reduce using rule 37 (expression -> cte .)
    ID              reduce using rule 37 (expression -> cte .)
    CTE_INT         reduce using rule 37 (expression -> cte .)
    CTE_FLOAT       reduce using rule 37 (expression -> cte .)
    RPAR            reduce using rule 37 (expression -> cte .)

  ! SEMICOMMA       [ reduce using rule 40 (factor -> cte .) ]
  ! PLUS            [ reduce using rule 40 (factor -> cte .) ]
  ! MINUS           [ reduce using rule 40 (factor -> cte .) ]
  ! TIMES           [ reduce using rule 40 (factor -> cte .) ]
  ! DIVIDE          [ reduce using rule 40 (factor -> cte .) ]
  ! GT              [ reduce using rule 40 (factor -> cte .) ]
  ! GTE             [ reduce using rule 40 (factor -> cte .) ]
  ! LT              [ reduce using rule 40 (factor -> cte .) ]
  ! LTE             [ reduce using rule 40 (factor -> cte .) ]
  ! NT              [ reduce using rule 40 (factor -> cte .) ]
  ! COMMA           [ reduce using rule 40 (factor -> cte .) ]
  ! LPAR            [ reduce using rule 40 (factor -> cte .) ]
  ! ID              [ reduce using rule 40 (factor -> cte .) ]
  ! CTE_INT         [ reduce using rule 40 (factor -> cte .) ]
  ! CTE_FLOAT       [ reduce using rule 40 (factor -> cte .) ]
  ! RPAR            [ reduce using rule 40 (factor -> cte .) ]


state 69

    (38) factor -> LPAR . expression RPAR
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 92
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 70

    (22) cte -> CTE_INT .

    SEMICOMMA       reduce using rule 22 (cte -> CTE_INT .)
    PLUS            reduce using rule 22 (cte -> CTE_INT .)
    MINUS           reduce using rule 22 (cte -> CTE_INT .)
    TIMES           reduce using rule 22 (cte -> CTE_INT .)
    DIVIDE          reduce using rule 22 (cte -> CTE_INT .)
    GT              reduce using rule 22 (cte -> CTE_INT .)
    GTE             reduce using rule 22 (cte -> CTE_INT .)
    LT              reduce using rule 22 (cte -> CTE_INT .)
    LTE             reduce using rule 22 (cte -> CTE_INT .)
    NT              reduce using rule 22 (cte -> CTE_INT .)
    COMMA           reduce using rule 22 (cte -> CTE_INT .)
    LPAR            reduce using rule 22 (cte -> CTE_INT .)
    ID              reduce using rule 22 (cte -> CTE_INT .)
    CTE_INT         reduce using rule 22 (cte -> CTE_INT .)
    CTE_FLOAT       reduce using rule 22 (cte -> CTE_INT .)
    RPAR            reduce using rule 22 (cte -> CTE_INT .)


state 71

    (23) cte -> CTE_FLOAT . PUNTO CTE_INT

    PUNTO           shift and go to state 93


state 72

    (42) fcall -> ID LPAR list_exp . RPAR SEMICOMMA

    RPAR            shift and go to state 94


state 73

    (43) list_exp -> expression . list_exp
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression
    (43) list_exp -> . expression list_exp
    (44) list_exp -> . EMPTY
    (45) list_exp -> . COMMA list_exp
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (65) EMPTY -> .
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91
    COMMA           shift and go to state 75
    RPAR            reduce using rule 65 (EMPTY -> .)
    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 73
    list_exp                       shift and go to state 95
    EMPTY                          shift and go to state 74
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 74

    (44) list_exp -> EMPTY .

    RPAR            reduce using rule 44 (list_exp -> EMPTY .)


state 75

    (45) list_exp -> COMMA . list_exp
    (43) list_exp -> . expression list_exp
    (44) list_exp -> . EMPTY
    (45) list_exp -> . COMMA list_exp
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (65) EMPTY -> .
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    COMMA           shift and go to state 75
    RPAR            reduce using rule 65 (EMPTY -> .)
    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    list_exp                       shift and go to state 96
    expression                     shift and go to state 73
    EMPTY                          shift and go to state 74
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 76

    (48) conditions -> IF LPAR expression . RPAR body haselse SEMICOMMA
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    RPAR            shift and go to state 97
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91


state 77

    (51) imprimir -> PRINT LPAR lst_printing_options . RPAR SEMICOMMA

    RPAR            shift and go to state 98


state 78

    (52) lst_printing_options -> CTE_STRING . COMMA lst_printing_options
    (57) lst_printing_options -> CTE_STRING .

    COMMA           shift and go to state 99
    RPAR            reduce using rule 57 (lst_printing_options -> CTE_STRING .)


state 79

    (53) lst_printing_options -> expression .
    (54) lst_printing_options -> expression . COMMA lst_printing_options
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    RPAR            reduce using rule 53 (lst_printing_options -> expression .)
    COMMA           shift and go to state 100
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91


state 80

    (55) lst_printing_options -> vars .
    (56) lst_printing_options -> vars . COMMA lst_printing_options

    RPAR            reduce using rule 55 (lst_printing_options -> vars .)
    COMMA           shift and go to state 101


state 81

    (41) cycle -> WHILE LPAR expression . RPAR DO body SEMICOMMA
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    RPAR            shift and go to state 102
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91


state 82

    (21) assign -> ID EQ expression SEMICOMMA .

    ID              reduce using rule 21 (assign -> ID EQ expression SEMICOMMA .)
    IF              reduce using rule 21 (assign -> ID EQ expression SEMICOMMA .)
    PRINT           reduce using rule 21 (assign -> ID EQ expression SEMICOMMA .)
    WHILE           reduce using rule 21 (assign -> ID EQ expression SEMICOMMA .)
    VAR             reduce using rule 21 (assign -> ID EQ expression SEMICOMMA .)
    RBRACE          reduce using rule 21 (assign -> ID EQ expression SEMICOMMA .)


state 83

    (27) expression -> expression PLUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 103
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 84

    (28) expression -> expression MINUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 104
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 85

    (29) expression -> expression TIMES . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 105
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 86

    (30) expression -> expression DIVIDE . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 106
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 87

    (31) expression -> expression GT . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 107
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 88

    (32) expression -> expression GTE . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 108
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 89

    (33) expression -> expression LT . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 109
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 90

    (34) expression -> expression LTE . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 110
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 91

    (35) expression -> expression NT . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 111
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 92

    (38) factor -> LPAR expression . RPAR
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    RPAR            shift and go to state 112
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91


state 93

    (23) cte -> CTE_FLOAT PUNTO . CTE_INT

    CTE_INT         shift and go to state 113


state 94

    (42) fcall -> ID LPAR list_exp RPAR . SEMICOMMA

    SEMICOMMA       shift and go to state 114


state 95

    (43) list_exp -> expression list_exp .

    RPAR            reduce using rule 43 (list_exp -> expression list_exp .)


state 96

    (45) list_exp -> COMMA list_exp .

    RPAR            reduce using rule 45 (list_exp -> COMMA list_exp .)


state 97

    (48) conditions -> IF LPAR expression RPAR . body haselse SEMICOMMA
    (7) body -> . LBRACE statment RBRACE

    LBRACE          shift and go to state 38

    body                           shift and go to state 115

state 98

    (51) imprimir -> PRINT LPAR lst_printing_options RPAR . SEMICOMMA

    SEMICOMMA       shift and go to state 116


state 99

    (52) lst_printing_options -> CTE_STRING COMMA . lst_printing_options
    (52) lst_printing_options -> . CTE_STRING COMMA lst_printing_options
    (53) lst_printing_options -> . expression
    (54) lst_printing_options -> . expression COMMA lst_printing_options
    (55) lst_printing_options -> . vars
    (56) lst_printing_options -> . vars COMMA lst_printing_options
    (57) lst_printing_options -> . CTE_STRING
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (58) vars -> . VAR lst_var
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    CTE_STRING      shift and go to state 78
    VAR             shift and go to state 8
    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    lst_printing_options           shift and go to state 117
    expression                     shift and go to state 79
    vars                           shift and go to state 80
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 100

    (54) lst_printing_options -> expression COMMA . lst_printing_options
    (52) lst_printing_options -> . CTE_STRING COMMA lst_printing_options
    (53) lst_printing_options -> . expression
    (54) lst_printing_options -> . expression COMMA lst_printing_options
    (55) lst_printing_options -> . vars
    (56) lst_printing_options -> . vars COMMA lst_printing_options
    (57) lst_printing_options -> . CTE_STRING
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (58) vars -> . VAR lst_var
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    CTE_STRING      shift and go to state 78
    VAR             shift and go to state 8
    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    expression                     shift and go to state 79
    lst_printing_options           shift and go to state 118
    vars                           shift and go to state 80
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 101

    (56) lst_printing_options -> vars COMMA . lst_printing_options
    (52) lst_printing_options -> . CTE_STRING COMMA lst_printing_options
    (53) lst_printing_options -> . expression
    (54) lst_printing_options -> . expression COMMA lst_printing_options
    (55) lst_printing_options -> . vars
    (56) lst_printing_options -> . vars COMMA lst_printing_options
    (57) lst_printing_options -> . CTE_STRING
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression GTE expression
    (33) expression -> . expression LT expression
    (34) expression -> . expression LTE expression
    (35) expression -> . expression NT expression
    (36) expression -> . factor
    (37) expression -> . cte
    (58) vars -> . VAR lst_var
    (38) factor -> . LPAR expression RPAR
    (39) factor -> . ID
    (40) factor -> . cte
    (22) cte -> . CTE_INT
    (23) cte -> . CTE_FLOAT PUNTO CTE_INT

    CTE_STRING      shift and go to state 78
    VAR             shift and go to state 8
    LPAR            shift and go to state 69
    ID              shift and go to state 65
    CTE_INT         shift and go to state 70
    CTE_FLOAT       shift and go to state 71

    vars                           shift and go to state 80
    lst_printing_options           shift and go to state 119
    expression                     shift and go to state 79
    factor                         shift and go to state 67
    cte                            shift and go to state 68

state 102

    (41) cycle -> WHILE LPAR expression RPAR . DO body SEMICOMMA

    DO              shift and go to state 120


state 103

    (27) expression -> expression PLUS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    SEMICOMMA       reduce using rule 27 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 27 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 27 (expression -> expression PLUS expression .)
    GT              reduce using rule 27 (expression -> expression PLUS expression .)
    GTE             reduce using rule 27 (expression -> expression PLUS expression .)
    LT              reduce using rule 27 (expression -> expression PLUS expression .)
    LTE             reduce using rule 27 (expression -> expression PLUS expression .)
    NT              reduce using rule 27 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 27 (expression -> expression PLUS expression .)
    LPAR            reduce using rule 27 (expression -> expression PLUS expression .)
    ID              reduce using rule 27 (expression -> expression PLUS expression .)
    CTE_INT         reduce using rule 27 (expression -> expression PLUS expression .)
    CTE_FLOAT       reduce using rule 27 (expression -> expression PLUS expression .)
    RPAR            reduce using rule 27 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86

  ! TIMES           [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! GT              [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 88 ]
  ! LT              [ shift and go to state 89 ]
  ! LTE             [ shift and go to state 90 ]
  ! NT              [ shift and go to state 91 ]


state 104

    (28) expression -> expression MINUS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    SEMICOMMA       reduce using rule 28 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 28 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 28 (expression -> expression MINUS expression .)
    GT              reduce using rule 28 (expression -> expression MINUS expression .)
    GTE             reduce using rule 28 (expression -> expression MINUS expression .)
    LT              reduce using rule 28 (expression -> expression MINUS expression .)
    LTE             reduce using rule 28 (expression -> expression MINUS expression .)
    NT              reduce using rule 28 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 28 (expression -> expression MINUS expression .)
    LPAR            reduce using rule 28 (expression -> expression MINUS expression .)
    ID              reduce using rule 28 (expression -> expression MINUS expression .)
    CTE_INT         reduce using rule 28 (expression -> expression MINUS expression .)
    CTE_FLOAT       reduce using rule 28 (expression -> expression MINUS expression .)
    RPAR            reduce using rule 28 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86

  ! TIMES           [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! GT              [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 88 ]
  ! LT              [ shift and go to state 89 ]
  ! LTE             [ shift and go to state 90 ]
  ! NT              [ shift and go to state 91 ]


state 105

    (29) expression -> expression TIMES expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    SEMICOMMA       reduce using rule 29 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 29 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 29 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 29 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 29 (expression -> expression TIMES expression .)
    GT              reduce using rule 29 (expression -> expression TIMES expression .)
    GTE             reduce using rule 29 (expression -> expression TIMES expression .)
    LT              reduce using rule 29 (expression -> expression TIMES expression .)
    LTE             reduce using rule 29 (expression -> expression TIMES expression .)
    NT              reduce using rule 29 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 29 (expression -> expression TIMES expression .)
    LPAR            reduce using rule 29 (expression -> expression TIMES expression .)
    ID              reduce using rule 29 (expression -> expression TIMES expression .)
    CTE_INT         reduce using rule 29 (expression -> expression TIMES expression .)
    CTE_FLOAT       reduce using rule 29 (expression -> expression TIMES expression .)
    RPAR            reduce using rule 29 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIVIDE          [ shift and go to state 86 ]
  ! GT              [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 88 ]
  ! LT              [ shift and go to state 89 ]
  ! LTE             [ shift and go to state 90 ]
  ! NT              [ shift and go to state 91 ]


state 106

    (30) expression -> expression DIVIDE expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

    SEMICOMMA       reduce using rule 30 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 30 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 30 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 30 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 30 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 30 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 30 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 30 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 30 (expression -> expression DIVIDE expression .)
    NT              reduce using rule 30 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 30 (expression -> expression DIVIDE expression .)
    LPAR            reduce using rule 30 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 30 (expression -> expression DIVIDE expression .)
    CTE_INT         reduce using rule 30 (expression -> expression DIVIDE expression .)
    CTE_FLOAT       reduce using rule 30 (expression -> expression DIVIDE expression .)
    RPAR            reduce using rule 30 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIVIDE          [ shift and go to state 86 ]
  ! GT              [ shift and go to state 87 ]
  ! GTE             [ shift and go to state 88 ]
  ! LT              [ shift and go to state 89 ]
  ! LTE             [ shift and go to state 90 ]
  ! NT              [ shift and go to state 91 ]


state 107

    (31) expression -> expression GT expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NT resolved as shift
    SEMICOMMA       reduce using rule 31 (expression -> expression GT expression .)
    COMMA           reduce using rule 31 (expression -> expression GT expression .)
    LPAR            reduce using rule 31 (expression -> expression GT expression .)
    ID              reduce using rule 31 (expression -> expression GT expression .)
    CTE_INT         reduce using rule 31 (expression -> expression GT expression .)
    CTE_FLOAT       reduce using rule 31 (expression -> expression GT expression .)
    RPAR            reduce using rule 31 (expression -> expression GT expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91

  ! PLUS            [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! GTE             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! LTE             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! NT              [ reduce using rule 31 (expression -> expression GT expression .) ]


state 108

    (32) expression -> expression GTE expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NT resolved as shift
    SEMICOMMA       reduce using rule 32 (expression -> expression GTE expression .)
    COMMA           reduce using rule 32 (expression -> expression GTE expression .)
    LPAR            reduce using rule 32 (expression -> expression GTE expression .)
    ID              reduce using rule 32 (expression -> expression GTE expression .)
    CTE_INT         reduce using rule 32 (expression -> expression GTE expression .)
    CTE_FLOAT       reduce using rule 32 (expression -> expression GTE expression .)
    RPAR            reduce using rule 32 (expression -> expression GTE expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91

  ! PLUS            [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! GTE             [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! LTE             [ reduce using rule 32 (expression -> expression GTE expression .) ]
  ! NT              [ reduce using rule 32 (expression -> expression GTE expression .) ]


state 109

    (33) expression -> expression LT expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NT resolved as shift
    SEMICOMMA       reduce using rule 33 (expression -> expression LT expression .)
    COMMA           reduce using rule 33 (expression -> expression LT expression .)
    LPAR            reduce using rule 33 (expression -> expression LT expression .)
    ID              reduce using rule 33 (expression -> expression LT expression .)
    CTE_INT         reduce using rule 33 (expression -> expression LT expression .)
    CTE_FLOAT       reduce using rule 33 (expression -> expression LT expression .)
    RPAR            reduce using rule 33 (expression -> expression LT expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91

  ! PLUS            [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! GTE             [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! LTE             [ reduce using rule 33 (expression -> expression LT expression .) ]
  ! NT              [ reduce using rule 33 (expression -> expression LT expression .) ]


state 110

    (34) expression -> expression LTE expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NT resolved as shift
    SEMICOMMA       reduce using rule 34 (expression -> expression LTE expression .)
    COMMA           reduce using rule 34 (expression -> expression LTE expression .)
    LPAR            reduce using rule 34 (expression -> expression LTE expression .)
    ID              reduce using rule 34 (expression -> expression LTE expression .)
    CTE_INT         reduce using rule 34 (expression -> expression LTE expression .)
    CTE_FLOAT       reduce using rule 34 (expression -> expression LTE expression .)
    RPAR            reduce using rule 34 (expression -> expression LTE expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91

  ! PLUS            [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! GTE             [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! LTE             [ reduce using rule 34 (expression -> expression LTE expression .) ]
  ! NT              [ reduce using rule 34 (expression -> expression LTE expression .) ]


state 111

    (35) expression -> expression NT expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . GTE expression
    (33) expression -> expression . LT expression
    (34) expression -> expression . LTE expression
    (35) expression -> expression . NT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NT resolved as shift
    SEMICOMMA       reduce using rule 35 (expression -> expression NT expression .)
    COMMA           reduce using rule 35 (expression -> expression NT expression .)
    LPAR            reduce using rule 35 (expression -> expression NT expression .)
    ID              reduce using rule 35 (expression -> expression NT expression .)
    CTE_INT         reduce using rule 35 (expression -> expression NT expression .)
    CTE_FLOAT       reduce using rule 35 (expression -> expression NT expression .)
    RPAR            reduce using rule 35 (expression -> expression NT expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    GT              shift and go to state 87
    GTE             shift and go to state 88
    LT              shift and go to state 89
    LTE             shift and go to state 90
    NT              shift and go to state 91

  ! PLUS            [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! GT              [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! GTE             [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! LT              [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! LTE             [ reduce using rule 35 (expression -> expression NT expression .) ]
  ! NT              [ reduce using rule 35 (expression -> expression NT expression .) ]


state 112

    (38) factor -> LPAR expression RPAR .

    SEMICOMMA       reduce using rule 38 (factor -> LPAR expression RPAR .)
    PLUS            reduce using rule 38 (factor -> LPAR expression RPAR .)
    MINUS           reduce using rule 38 (factor -> LPAR expression RPAR .)
    TIMES           reduce using rule 38 (factor -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 38 (factor -> LPAR expression RPAR .)
    GT              reduce using rule 38 (factor -> LPAR expression RPAR .)
    GTE             reduce using rule 38 (factor -> LPAR expression RPAR .)
    LT              reduce using rule 38 (factor -> LPAR expression RPAR .)
    LTE             reduce using rule 38 (factor -> LPAR expression RPAR .)
    NT              reduce using rule 38 (factor -> LPAR expression RPAR .)
    COMMA           reduce using rule 38 (factor -> LPAR expression RPAR .)
    LPAR            reduce using rule 38 (factor -> LPAR expression RPAR .)
    ID              reduce using rule 38 (factor -> LPAR expression RPAR .)
    CTE_INT         reduce using rule 38 (factor -> LPAR expression RPAR .)
    CTE_FLOAT       reduce using rule 38 (factor -> LPAR expression RPAR .)
    RPAR            reduce using rule 38 (factor -> LPAR expression RPAR .)


state 113

    (23) cte -> CTE_FLOAT PUNTO CTE_INT .

    SEMICOMMA       reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    PLUS            reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    MINUS           reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    TIMES           reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    DIVIDE          reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    GT              reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    GTE             reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    LT              reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    LTE             reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    NT              reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    COMMA           reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    LPAR            reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    ID              reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    CTE_INT         reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    CTE_FLOAT       reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)
    RPAR            reduce using rule 23 (cte -> CTE_FLOAT PUNTO CTE_INT .)


state 114

    (42) fcall -> ID LPAR list_exp RPAR SEMICOMMA .

    ID              reduce using rule 42 (fcall -> ID LPAR list_exp RPAR SEMICOMMA .)
    IF              reduce using rule 42 (fcall -> ID LPAR list_exp RPAR SEMICOMMA .)
    PRINT           reduce using rule 42 (fcall -> ID LPAR list_exp RPAR SEMICOMMA .)
    WHILE           reduce using rule 42 (fcall -> ID LPAR list_exp RPAR SEMICOMMA .)
    VAR             reduce using rule 42 (fcall -> ID LPAR list_exp RPAR SEMICOMMA .)
    RBRACE          reduce using rule 42 (fcall -> ID LPAR list_exp RPAR SEMICOMMA .)


state 115

    (48) conditions -> IF LPAR expression RPAR body . haselse SEMICOMMA
    (49) haselse -> . ELSE body
    (50) haselse -> . EMPTY
    (65) EMPTY -> .

    ELSE            shift and go to state 122
    SEMICOMMA       reduce using rule 65 (EMPTY -> .)

    haselse                        shift and go to state 121
    EMPTY                          shift and go to state 123

state 116

    (51) imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA .

    ID              reduce using rule 51 (imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA .)
    IF              reduce using rule 51 (imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA .)
    PRINT           reduce using rule 51 (imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA .)
    WHILE           reduce using rule 51 (imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA .)
    VAR             reduce using rule 51 (imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA .)
    RBRACE          reduce using rule 51 (imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA .)


state 117

    (52) lst_printing_options -> CTE_STRING COMMA lst_printing_options .

    RPAR            reduce using rule 52 (lst_printing_options -> CTE_STRING COMMA lst_printing_options .)


state 118

    (54) lst_printing_options -> expression COMMA lst_printing_options .

    RPAR            reduce using rule 54 (lst_printing_options -> expression COMMA lst_printing_options .)


state 119

    (56) lst_printing_options -> vars COMMA lst_printing_options .

    RPAR            reduce using rule 56 (lst_printing_options -> vars COMMA lst_printing_options .)


state 120

    (41) cycle -> WHILE LPAR expression RPAR DO . body SEMICOMMA
    (7) body -> . LBRACE statment RBRACE

    LBRACE          shift and go to state 38

    body                           shift and go to state 124

state 121

    (48) conditions -> IF LPAR expression RPAR body haselse . SEMICOMMA

    SEMICOMMA       shift and go to state 125


state 122

    (49) haselse -> ELSE . body
    (7) body -> . LBRACE statment RBRACE

    LBRACE          shift and go to state 38

    body                           shift and go to state 126

state 123

    (50) haselse -> EMPTY .

    SEMICOMMA       reduce using rule 50 (haselse -> EMPTY .)


state 124

    (41) cycle -> WHILE LPAR expression RPAR DO body . SEMICOMMA

    SEMICOMMA       shift and go to state 127


state 125

    (48) conditions -> IF LPAR expression RPAR body haselse SEMICOMMA .

    ID              reduce using rule 48 (conditions -> IF LPAR expression RPAR body haselse SEMICOMMA .)
    IF              reduce using rule 48 (conditions -> IF LPAR expression RPAR body haselse SEMICOMMA .)
    PRINT           reduce using rule 48 (conditions -> IF LPAR expression RPAR body haselse SEMICOMMA .)
    WHILE           reduce using rule 48 (conditions -> IF LPAR expression RPAR body haselse SEMICOMMA .)
    VAR             reduce using rule 48 (conditions -> IF LPAR expression RPAR body haselse SEMICOMMA .)
    RBRACE          reduce using rule 48 (conditions -> IF LPAR expression RPAR body haselse SEMICOMMA .)


state 126

    (49) haselse -> ELSE body .

    SEMICOMMA       reduce using rule 49 (haselse -> ELSE body .)


state 127

    (41) cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA .

    ID              reduce using rule 41 (cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA .)
    IF              reduce using rule 41 (cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA .)
    PRINT           reduce using rule 41 (cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA .)
    WHILE           reduce using rule 41 (cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA .)
    VAR             reduce using rule 41 (cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA .)
    RBRACE          reduce using rule 41 (cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for GT in state 107 resolved as shift
WARNING: shift/reduce conflict for GTE in state 107 resolved as shift
WARNING: shift/reduce conflict for LT in state 107 resolved as shift
WARNING: shift/reduce conflict for LTE in state 107 resolved as shift
WARNING: shift/reduce conflict for NT in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for GT in state 108 resolved as shift
WARNING: shift/reduce conflict for GTE in state 108 resolved as shift
WARNING: shift/reduce conflict for LT in state 108 resolved as shift
WARNING: shift/reduce conflict for LTE in state 108 resolved as shift
WARNING: shift/reduce conflict for NT in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for GT in state 109 resolved as shift
WARNING: shift/reduce conflict for GTE in state 109 resolved as shift
WARNING: shift/reduce conflict for LT in state 109 resolved as shift
WARNING: shift/reduce conflict for LTE in state 109 resolved as shift
WARNING: shift/reduce conflict for NT in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for GT in state 110 resolved as shift
WARNING: shift/reduce conflict for GTE in state 110 resolved as shift
WARNING: shift/reduce conflict for LT in state 110 resolved as shift
WARNING: shift/reduce conflict for LTE in state 110 resolved as shift
WARNING: shift/reduce conflict for NT in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for GT in state 111 resolved as shift
WARNING: shift/reduce conflict for GTE in state 111 resolved as shift
WARNING: shift/reduce conflict for LT in state 111 resolved as shift
WARNING: shift/reduce conflict for LTE in state 111 resolved as shift
WARNING: shift/reduce conflict for NT in state 111 resolved as shift
WARNING: reduce/reduce conflict in state 42 resolved using rule (statment -> assign)
WARNING: rejected rule (EMPTY -> <empty>) in state 42
WARNING: reduce/reduce conflict in state 43 resolved using rule (statment -> conditions)
WARNING: rejected rule (EMPTY -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 44 resolved using rule (statment -> fcall)
WARNING: rejected rule (EMPTY -> <empty>) in state 44
WARNING: reduce/reduce conflict in state 45 resolved using rule (statment -> imprimir)
WARNING: rejected rule (EMPTY -> <empty>) in state 45
WARNING: reduce/reduce conflict in state 46 resolved using rule (statment -> cycle)
WARNING: rejected rule (EMPTY -> <empty>) in state 46
WARNING: reduce/reduce conflict in state 47 resolved using rule (statment -> vars)
WARNING: rejected rule (EMPTY -> <empty>) in state 47
WARNING: reduce/reduce conflict in state 68 resolved using rule (expression -> cte)
WARNING: rejected rule (factor -> cte) in state 68
WARNING: Rule (factor -> cte) is never reduced
