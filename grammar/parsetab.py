
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDECOMMA CTE_FLOAT CTE_INT CTE_STRING DIVIDE DO DOUBLEPOINT ELSE END EQ FLOAT GT GTE ID IF INT LBRACE LPAR LT LTE MINUS NT PLUS PRINT PROGRAM RBRACE RPAR SEMICOMMA TIMES VAR VOID WHILEempezar : PROGRAM ID SEMICOMMA var_or_func  ENDvar_or_func : vars func_create\n                   | func_createfunc_create : funcs func_create\n                   | EMPTYbody : LBRACE statment RBRACE statment : assign\n                 | conditions\n                 | fcall\n                 | imprimir\n                 | varsassign : ID EQ expression SEMICOMMA\n              | ID EQ cte SEMICOMMActe : CTE_INT\n           | CTE_FLOATfuncs : VOID ID LPAR func_vars RPAR   body  SEMICOMMAfunc_vars : ID DOUBLEPOINT type  func_vars\n                 |  EMPTY\n                 | COMMA func_varsexpression : exp opop : GT exp\n          | GTE exp\n          | LT exp\n          | LTE exp\n          | NT exp\n          | EMPTYexp : termino lopblopb : PLUS termino\n            | MINUS termino\n            | EMPTYtermino : factor lopalopa : TIMES factor\n            | DIVIDE factor\n            | EMPTYcycle : WHILE body DO LPAR expression RPAR SEMICOMMAfcall : ID LPAR list_exp RPAR SEMICOMMAlist_exp : expression list_exp\n                | EMPTY\n                | COMMA list_expfactor : LPAR expression RPAR\n              | lopb id_cte\n              | id_cteid_cte : ID\n              | cteconditions : IF LPAR expression RPAR body haselse SEMICOMMAhaselse : ELSE body\n               | EMPTYimprimir : PRINT  LPAR lst_printing_options RPAR SEMICOMMAlst_printing_options : CTE_STRING  COMMA lst_printing_options\n                            | expression \n                            | expression COMMA lst_printing_options\n                            | vars\n                            | vars COMMA lst_printing_options\n                            | EMPTYvars : VAR lst_varlst_var : lst_id DOUBLEPOINT type SEMICOMMA \n               | EMPTYlst_id : ID lst_id\n              | COMMA lst_id\n              | EMPTYtype : INT\n            | FLOAT\n            | VOID EMPTY :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,],[0,-1,]),'ID':([2,8,11,17,18,25,27,28,29,33,38,40,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,81,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,105,106,107,108,109,110,111,112,113,114,115,],[3,17,20,17,17,30,-61,-62,-63,30,30,49,57,57,57,57,-43,-64,-14,-15,-64,57,-64,57,-42,57,57,-30,57,-30,57,-44,-30,-20,57,57,57,57,57,-26,-27,-41,-31,57,57,-34,-28,-29,57,57,57,-21,-22,-23,-24,-25,-32,-33,-40,]),'SEMICOMMA':([3,26,27,28,29,39,52,57,58,59,60,61,62,63,65,67,70,75,84,90,91,92,93,96,98,99,100,104,108,109,110,111,112,113,114,115,117,122,124,126,],[4,34,-61,-62,-63,42,-6,-43,82,83,-64,-14,-15,-64,-64,-42,-30,-44,-20,-26,-27,-41,-31,-34,-28,-29,116,118,-21,-22,-23,-24,-25,-32,-33,-40,-64,125,-47,-46,]),'VAR':([4,40,56,105,106,107,],[8,8,8,8,8,8,]),'VOID':([4,6,8,9,14,16,21,34,35,42,],[11,11,-64,11,-55,-57,29,-56,29,-16,]),'END':([4,5,6,7,8,9,10,13,14,16,19,34,42,],[-64,12,-64,-3,-64,-64,-5,-2,-55,-57,-4,-56,-16,]),'COMMA':([8,14,16,17,18,25,27,28,29,33,34,38,54,57,60,61,62,63,65,67,70,72,74,75,78,79,80,84,90,91,92,93,96,98,99,108,109,110,111,112,113,114,115,],[18,-55,-57,18,18,33,-61,-62,-63,33,-56,33,74,-43,-64,-14,-15,-64,-64,-42,-30,74,74,-44,105,106,107,-20,-26,-27,-41,-31,-34,-28,-29,-21,-22,-23,-24,-25,-32,-33,-40,]),'RBRACE':([8,14,16,34,43,44,45,46,47,48,82,83,116,118,125,],[-64,-55,-57,-56,52,-7,-8,-9,-10,-11,-12,-13,-36,-48,-45,]),'RPAR':([8,14,16,25,27,28,29,31,32,33,34,37,38,41,54,56,57,60,61,62,63,65,67,70,71,72,73,74,75,76,77,79,80,81,84,90,91,92,93,96,97,98,99,101,102,105,106,107,108,109,110,111,112,113,114,115,119,120,121,],[-64,-55,-57,-64,-61,-62,-63,36,-18,-64,-56,-19,-64,-17,-64,-64,-43,-64,-14,-15,-64,-64,-42,-30,100,-64,-38,-64,-44,103,104,-50,-52,-54,-20,-26,-27,-41,-31,-34,115,-28,-29,-37,-39,-64,-64,-64,-21,-22,-23,-24,-25,-32,-33,-40,-49,-51,-53,]),'DOUBLEPOINT':([8,15,16,17,18,22,23,24,30,],[-64,21,-60,-64,-64,-58,-60,-59,35,]),'LPAR':([20,49,50,51,53,54,55,56,57,60,61,62,63,65,66,67,68,69,70,72,74,75,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,105,106,107,108,109,110,111,112,113,114,115,],[25,54,55,56,66,66,66,66,-43,-64,-14,-15,-64,-64,66,-42,66,66,-30,66,66,-44,-20,66,66,66,66,66,-26,-27,-41,-31,66,66,-34,-28,-29,66,66,66,-21,-22,-23,-24,-25,-32,-33,-40,]),'INT':([21,35,],[27,27,]),'FLOAT':([21,35,],[28,28,]),'LBRACE':([36,103,123,],[40,40,40,]),'IF':([40,],[50,]),'PRINT':([40,],[51,]),'EQ':([49,],[53,]),'ELSE':([52,117,],[-6,123,]),'CTE_INT':([53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,81,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,105,106,107,108,109,110,111,112,113,114,115,],[61,61,61,61,-43,-64,-14,-15,-64,61,-64,61,-42,61,61,-30,61,-30,61,-44,-30,-20,61,61,61,61,61,-26,-27,-41,-31,61,61,-34,-28,-29,61,61,61,-21,-22,-23,-24,-25,-32,-33,-40,]),'CTE_FLOAT':([53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,81,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,105,106,107,108,109,110,111,112,113,114,115,],[62,62,62,62,-43,-64,-14,-15,-64,62,-64,62,-42,62,62,-30,62,-30,62,-44,-30,-20,62,62,62,62,62,-26,-27,-41,-31,62,62,-34,-28,-29,62,62,62,-21,-22,-23,-24,-25,-32,-33,-40,]),'PLUS':([53,54,55,56,57,59,60,61,62,63,65,66,67,68,69,70,72,74,75,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,105,106,107,108,109,110,111,112,113,114,115,],[68,68,68,68,-43,-44,-64,-14,-15,68,-64,68,-42,68,68,-30,68,68,-44,-20,68,68,68,68,68,-26,-27,-41,-31,68,68,-34,-28,-29,68,68,68,-21,-22,-23,-24,-25,-32,-33,-40,]),'MINUS':([53,54,55,56,57,59,60,61,62,63,65,66,67,68,69,70,72,74,75,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,105,106,107,108,109,110,111,112,113,114,115,],[69,69,69,69,-43,-44,-64,-14,-15,69,-64,69,-42,69,69,-30,69,69,-44,-20,69,69,69,69,69,-26,-27,-41,-31,69,69,-34,-28,-29,69,69,69,-21,-22,-23,-24,-25,-32,-33,-40,]),'CTE_STRING':([56,105,106,107,],[78,78,78,78,]),'TIMES':([57,59,61,62,65,67,75,92,115,],[-43,-44,-14,-15,94,-42,-44,-41,-40,]),'DIVIDE':([57,59,61,62,65,67,75,92,115,],[-43,-44,-14,-15,95,-42,-44,-41,-40,]),'GT':([57,59,60,61,62,63,65,67,70,75,91,92,93,96,98,99,113,114,115,],[-43,-44,85,-14,-15,-64,-64,-42,-30,-44,-27,-41,-31,-34,-28,-29,-32,-33,-40,]),'GTE':([57,59,60,61,62,63,65,67,70,75,91,92,93,96,98,99,113,114,115,],[-43,-44,86,-14,-15,-64,-64,-42,-30,-44,-27,-41,-31,-34,-28,-29,-32,-33,-40,]),'LT':([57,59,60,61,62,63,65,67,70,75,91,92,93,96,98,99,113,114,115,],[-43,-44,87,-14,-15,-64,-64,-42,-30,-44,-27,-41,-31,-34,-28,-29,-32,-33,-40,]),'LTE':([57,59,60,61,62,63,65,67,70,75,91,92,93,96,98,99,113,114,115,],[-43,-44,88,-14,-15,-64,-64,-42,-30,-44,-27,-41,-31,-34,-28,-29,-32,-33,-40,]),'NT':([57,59,60,61,62,63,65,67,70,75,91,92,93,96,98,99,113,114,115,],[-43,-44,89,-14,-15,-64,-64,-42,-30,-44,-27,-41,-31,-34,-28,-29,-32,-33,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empezar':([0,],[1,]),'var_or_func':([4,],[5,]),'vars':([4,40,56,105,106,107,],[6,48,80,80,80,80,]),'func_create':([4,6,9,],[7,13,19,]),'funcs':([4,6,9,],[9,9,9,]),'EMPTY':([4,6,8,9,17,18,25,33,38,53,54,55,56,60,63,65,66,68,69,72,74,85,86,87,88,89,94,95,105,106,107,117,],[10,10,16,10,23,23,32,32,32,70,73,70,81,90,70,96,70,70,70,73,73,70,70,70,70,70,70,70,81,81,81,124,]),'lst_var':([8,],[14,]),'lst_id':([8,17,18,],[15,22,24,]),'type':([21,35,],[26,38,]),'func_vars':([25,33,38,],[31,37,41,]),'body':([36,103,123,],[39,117,126,]),'statment':([40,],[43,]),'assign':([40,],[44,]),'conditions':([40,],[45,]),'fcall':([40,],[46,]),'imprimir':([40,],[47,]),'expression':([53,54,55,56,66,72,74,105,106,107,],[58,72,76,79,97,72,72,79,79,79,]),'cte':([53,54,55,56,64,66,68,69,72,74,85,86,87,88,89,94,95,105,106,107,],[59,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'exp':([53,54,55,56,66,72,74,85,86,87,88,89,105,106,107,],[60,60,60,60,60,60,60,108,109,110,111,112,60,60,60,]),'termino':([53,54,55,56,66,68,69,72,74,85,86,87,88,89,105,106,107,],[63,63,63,63,63,98,99,63,63,63,63,63,63,63,63,63,63,]),'lopb':([53,54,55,56,63,66,68,69,72,74,85,86,87,88,89,94,95,105,106,107,],[64,64,64,64,91,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'factor':([53,54,55,56,66,68,69,72,74,85,86,87,88,89,94,95,105,106,107,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,113,114,65,65,65,]),'id_cte':([53,54,55,56,64,66,68,69,72,74,85,86,87,88,89,94,95,105,106,107,],[67,67,67,67,92,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'list_exp':([54,72,74,],[71,101,102,]),'lst_printing_options':([56,105,106,107,],[77,119,120,121,]),'op':([60,],[84,]),'lopa':([65,],[93,]),'haselse':([117,],[122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> empezar","S'",1,None,None,None),
  ('empezar -> PROGRAM ID SEMICOMMA var_or_func END','empezar',5,'p_empezar','yacc.py',26),
  ('var_or_func -> vars func_create','var_or_func',2,'p_var_or_func','yacc.py',31),
  ('var_or_func -> func_create','var_or_func',1,'p_var_or_func','yacc.py',32),
  ('func_create -> funcs func_create','func_create',2,'p_func_create','yacc.py',39),
  ('func_create -> EMPTY','func_create',1,'p_func_create','yacc.py',40),
  ('body -> LBRACE statment RBRACE','body',3,'p_body','yacc.py',47),
  ('statment -> assign','statment',1,'p_statement','yacc.py',50),
  ('statment -> conditions','statment',1,'p_statement','yacc.py',51),
  ('statment -> fcall','statment',1,'p_statement','yacc.py',52),
  ('statment -> imprimir','statment',1,'p_statement','yacc.py',53),
  ('statment -> vars','statment',1,'p_statement','yacc.py',54),
  ('assign -> ID EQ expression SEMICOMMA','assign',4,'p_assign','yacc.py',59),
  ('assign -> ID EQ cte SEMICOMMA','assign',4,'p_assign','yacc.py',60),
  ('cte -> CTE_INT','cte',1,'p_cte','yacc.py',67),
  ('cte -> CTE_FLOAT','cte',1,'p_cte','yacc.py',68),
  ('funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA','funcs',7,'p_funcs','yacc.py',72),
  ('func_vars -> ID DOUBLEPOINT type func_vars','func_vars',4,'p_func_vars','yacc.py',77),
  ('func_vars -> EMPTY','func_vars',1,'p_func_vars','yacc.py',78),
  ('func_vars -> COMMA func_vars','func_vars',2,'p_func_vars','yacc.py',79),
  ('expression -> exp op','expression',2,'p_expression','yacc.py',86),
  ('op -> GT exp','op',2,'p_op','yacc.py',90),
  ('op -> GTE exp','op',2,'p_op','yacc.py',91),
  ('op -> LT exp','op',2,'p_op','yacc.py',92),
  ('op -> LTE exp','op',2,'p_op','yacc.py',93),
  ('op -> NT exp','op',2,'p_op','yacc.py',94),
  ('op -> EMPTY','op',1,'p_op','yacc.py',95),
  ('exp -> termino lopb','exp',2,'p_exp','yacc.py',99),
  ('lopb -> PLUS termino','lopb',2,'p_lopb','yacc.py',103),
  ('lopb -> MINUS termino','lopb',2,'p_lopb','yacc.py',104),
  ('lopb -> EMPTY','lopb',1,'p_lopb','yacc.py',105),
  ('termino -> factor lopa','termino',2,'p_termino','yacc.py',111),
  ('lopa -> TIMES factor','lopa',2,'p_lopa','yacc.py',115),
  ('lopa -> DIVIDE factor','lopa',2,'p_lopa','yacc.py',116),
  ('lopa -> EMPTY','lopa',1,'p_lopa','yacc.py',117),
  ('cycle -> WHILE body DO LPAR expression RPAR SEMICOMMA','cycle',7,'p_cycle','yacc.py',123),
  ('fcall -> ID LPAR list_exp RPAR SEMICOMMA','fcall',5,'p_fcall','yacc.py',127),
  ('list_exp -> expression list_exp','list_exp',2,'p_list_exp','yacc.py',131),
  ('list_exp -> EMPTY','list_exp',1,'p_list_exp','yacc.py',132),
  ('list_exp -> COMMA list_exp','list_exp',2,'p_list_exp','yacc.py',133),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor','yacc.py',140),
  ('factor -> lopb id_cte','factor',2,'p_factor','yacc.py',141),
  ('factor -> id_cte','factor',1,'p_factor','yacc.py',142),
  ('id_cte -> ID','id_cte',1,'p_id_cte','yacc.py',150),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',151),
  ('conditions -> IF LPAR expression RPAR body haselse SEMICOMMA','conditions',7,'p_conditions','yacc.py',155),
  ('haselse -> ELSE body','haselse',2,'p_haselse','yacc.py',158),
  ('haselse -> EMPTY','haselse',1,'p_haselse','yacc.py',159),
  ('imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA','imprimir',5,'p_imprimir','yacc.py',166),
  ('lst_printing_options -> CTE_STRING COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',170),
  ('lst_printing_options -> expression','lst_printing_options',1,'p_lst_printing_options','yacc.py',171),
  ('lst_printing_options -> expression COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',172),
  ('lst_printing_options -> vars','lst_printing_options',1,'p_lst_printing_options','yacc.py',173),
  ('lst_printing_options -> vars COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',174),
  ('lst_printing_options -> EMPTY','lst_printing_options',1,'p_lst_printing_options','yacc.py',175),
  ('vars -> VAR lst_var','vars',2,'p_vars','yacc.py',181),
  ('lst_var -> lst_id DOUBLEPOINT type SEMICOMMA','lst_var',4,'p_lst_var','yacc.py',185),
  ('lst_var -> EMPTY','lst_var',1,'p_lst_var','yacc.py',186),
  ('lst_id -> ID lst_id','lst_id',2,'p_lst_id','yacc.py',195),
  ('lst_id -> COMMA lst_id','lst_id',2,'p_lst_id','yacc.py',196),
  ('lst_id -> EMPTY','lst_id',1,'p_lst_id','yacc.py',197),
  ('type -> INT','type',1,'p_type','yacc.py',209),
  ('type -> FLOAT','type',1,'p_type','yacc.py',210),
  ('type -> VOID','type',1,'p_type','yacc.py',211),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','yacc.py',215),
]
