
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDECOMMA CTE_BOOL CTE_FLOAT CTE_INT CTE_STRING DIVIDE DO DOUBLEPOINT ELSE END EQ FLOAT GT GTE ID IF INT LBRACE LPAR LT LTE MINUS NT PLUS PRINT PROGRAM PUNTO RBRACE RPAR SEMICOMMA TIMES VAR VOID WHILEempezar : PROGRAM ID SEMICOMMA  var_or_func  ENDvar_or_func : vars func_create\n                   | func_createfunc_create : funcs func_create\n                   | EMPTYfuncs : VOID ID LPAR func_vars RPAR   body  SEMICOMMAbody : LBRACE statment RBRACE statment : assign statment\n                 | assign\n                 | conditions\n                 | conditions statment             \n                 | fcall\n                 | fcall statment             \n                 | imprimir statment\n                 | imprimir\n                 | cycle statment\n                 | cycle\n                 | vars\n                 | vars statment\n                 | EMPTYassign : ID EQ expression SEMICOMMActe : CTE_INT\n           | CTE_FLOAT PUNTO CTE_INTfunc_vars : ID DOUBLEPOINT type   func_vars\n                 | COMMA func_vars\n                 | EMPTY expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression GT expression\n                  | expression GTE expression\n                  | expression LT expression\n                  | expression LTE expression\n                  | expression NT expression\n                  | factor\n                  | ctefactor : LPAR expression RPAR\n              | ID\n              | ctecycle : WHILE LPAR expression RPAR  DO  body  SEMICOMMAfcall : ID LPAR list_exp RPAR SEMICOMMAlist_exp : expression list_exp\n                | EMPTY\n                | COMMA list_expid_cte : ID\n              | cteconditions : IF LPAR expression RPAR body haselse SEMICOMMAhaselse : ELSE body\n               | EMPTYimprimir : PRINT LPAR lst_printing_options RPAR SEMICOMMAlst_printing_options : CTE_STRING  COMMA lst_printing_options\n                            | expression \n                            | expression COMMA lst_printing_options\n                            | vars\n                            | vars COMMA lst_printing_options\n                            | CTE_STRINGvars : VAR lst_var lst_var : lst_id DOUBLEPOINT type SEMICOMMA lst_id : ID lst_id\n              | COMMA lst_id\n              | EMPTYtype : INT\n            | FLOAT EMPTY :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,],[0,-1,]),'ID':([2,8,11,14,16,17,24,26,27,30,32,36,38,42,43,44,45,46,47,60,61,62,63,64,65,67,68,69,70,73,75,82,83,84,85,86,87,88,89,90,91,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,125,127,],[3,16,20,-58,16,16,28,-63,-64,28,-59,28,49,49,49,49,49,49,49,65,65,65,65,65,-39,-36,-37,65,-22,65,65,-21,65,65,65,65,65,65,65,65,65,65,65,65,-27,-28,-29,-30,-31,-32,-33,-34,-35,-38,-23,-42,-51,-48,-41,]),'SEMICOMMA':([3,25,26,27,37,53,65,66,67,68,70,94,98,103,104,105,106,107,108,109,110,111,112,113,115,121,123,124,126,],[4,32,-63,-64,40,-7,-39,82,-36,-37,-22,114,116,-27,-28,-29,-30,-31,-32,-33,-34,-35,-38,-23,-65,125,-50,127,-49,]),'VAR':([4,14,32,38,42,43,44,45,46,47,63,82,99,100,101,114,116,125,127,],[8,-58,-59,8,8,8,8,8,8,8,8,-21,8,8,8,-42,-51,-48,-41,]),'VOID':([4,6,9,14,32,40,],[11,11,11,-58,-59,-6,]),'END':([4,5,6,7,9,10,13,14,19,32,40,],[-65,12,-65,-3,-65,-5,-2,-58,-4,-59,-6,]),'COMMA':([8,14,16,17,24,26,27,30,32,36,61,65,67,68,70,73,75,78,79,80,103,104,105,106,107,108,109,110,111,112,113,],[17,-58,17,17,30,-63,-64,30,-59,30,75,-39,-36,-37,-22,75,75,99,100,101,-27,-28,-29,-30,-31,-32,-33,-34,-35,-38,-23,]),'DOUBLEPOINT':([8,15,16,17,18,22,23,28,],[-65,21,-65,-65,-62,-60,-61,33,]),'IF':([14,32,38,42,43,44,45,46,47,82,114,116,125,127,],[-58,-59,50,50,50,50,50,50,50,-21,-42,-51,-48,-41,]),'PRINT':([14,32,38,42,43,44,45,46,47,82,114,116,125,127,],[-58,-59,51,51,51,51,51,51,51,-21,-42,-51,-48,-41,]),'WHILE':([14,32,38,42,43,44,45,46,47,82,114,116,125,127,],[-58,-59,52,52,52,52,52,52,52,-21,-42,-51,-48,-41,]),'RBRACE':([14,32,38,41,42,43,44,45,46,47,48,54,55,56,57,58,59,82,114,116,125,127,],[-58,-59,-65,53,-9,-10,-12,-15,-17,-18,-20,-8,-11,-13,-14,-16,-19,-21,-42,-51,-48,-41,]),'RPAR':([14,24,26,27,29,30,31,32,35,36,39,61,65,67,68,70,72,73,74,75,76,77,78,79,80,81,92,95,96,103,104,105,106,107,108,109,110,111,112,113,117,118,119,],[-58,-65,-63,-64,34,-65,-26,-59,-25,-65,-24,-65,-39,-36,-37,-22,94,-65,-44,-65,97,98,-57,-53,-55,102,112,-43,-45,-27,-28,-29,-30,-31,-32,-33,-34,-35,-38,-23,-52,-54,-56,]),'LPAR':([20,49,50,51,52,60,61,62,63,64,65,67,68,69,70,73,75,83,84,85,86,87,88,89,90,91,99,100,101,103,104,105,106,107,108,109,110,111,112,113,],[24,61,62,63,64,69,69,69,69,69,-39,-36,-37,69,-22,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-27,-28,-29,-30,-31,-32,-33,-34,-35,-38,-23,]),'INT':([21,33,],[26,26,]),'FLOAT':([21,33,],[27,27,]),'LBRACE':([34,97,120,122,],[38,38,38,38,]),'EQ':([49,],[60,]),'ELSE':([53,115,],[-7,122,]),'CTE_INT':([60,61,62,63,64,65,67,68,69,70,73,75,83,84,85,86,87,88,89,90,91,93,99,100,101,103,104,105,106,107,108,109,110,111,112,113,],[70,70,70,70,70,-39,-36,-37,70,-22,70,70,70,70,70,70,70,70,70,70,70,113,70,70,70,-27,-28,-29,-30,-31,-32,-33,-34,-35,-38,-23,]),'CTE_FLOAT':([60,61,62,63,64,65,67,68,69,70,73,75,83,84,85,86,87,88,89,90,91,99,100,101,103,104,105,106,107,108,109,110,111,112,113,],[71,71,71,71,71,-39,-36,-37,71,-22,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-27,-28,-29,-30,-31,-32,-33,-34,-35,-38,-23,]),'CTE_STRING':([63,99,100,101,],[78,78,78,78,]),'PLUS':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,83,-36,-37,-22,83,83,83,83,83,-27,-28,-29,-30,83,83,83,83,83,-38,-23,]),'MINUS':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,84,-36,-37,-22,84,84,84,84,84,-27,-28,-29,-30,84,84,84,84,84,-38,-23,]),'TIMES':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,85,-36,-37,-22,85,85,85,85,85,85,85,-29,-30,85,85,85,85,85,-38,-23,]),'DIVIDE':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,86,-36,-37,-22,86,86,86,86,86,86,86,-29,-30,86,86,86,86,86,-38,-23,]),'GT':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,87,-36,-37,-22,87,87,87,87,87,-27,-28,-29,-30,87,87,87,87,87,-38,-23,]),'GTE':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,88,-36,-37,-22,88,88,88,88,88,-27,-28,-29,-30,88,88,88,88,88,-38,-23,]),'LT':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,89,-36,-37,-22,89,89,89,89,89,-27,-28,-29,-30,89,89,89,89,89,-38,-23,]),'LTE':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,90,-36,-37,-22,90,90,90,90,90,-27,-28,-29,-30,90,90,90,90,90,-38,-23,]),'NT':([65,66,67,68,70,73,76,79,81,92,103,104,105,106,107,108,109,110,111,112,113,],[-39,91,-36,-37,-22,91,91,91,91,91,-27,-28,-29,-30,91,91,91,91,91,-38,-23,]),'PUNTO':([71,],[93,]),'DO':([102,],[120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empezar':([0,],[1,]),'var_or_func':([4,],[5,]),'vars':([4,38,42,43,44,45,46,47,63,99,100,101,],[6,47,47,47,47,47,47,47,80,80,80,80,]),'func_create':([4,6,9,],[7,13,19,]),'funcs':([4,6,9,],[9,9,9,]),'EMPTY':([4,6,8,9,16,17,24,30,36,38,42,43,44,45,46,47,61,73,75,115,],[10,10,18,10,18,18,31,31,31,48,48,48,48,48,48,48,74,74,74,123,]),'lst_var':([8,],[14,]),'lst_id':([8,16,17,],[15,22,23,]),'type':([21,33,],[25,36,]),'func_vars':([24,30,36,],[29,35,39,]),'body':([34,97,120,122,],[37,115,124,126,]),'statment':([38,42,43,44,45,46,47,],[41,54,55,56,57,58,59,]),'assign':([38,42,43,44,45,46,47,],[42,42,42,42,42,42,42,]),'conditions':([38,42,43,44,45,46,47,],[43,43,43,43,43,43,43,]),'fcall':([38,42,43,44,45,46,47,],[44,44,44,44,44,44,44,]),'imprimir':([38,42,43,44,45,46,47,],[45,45,45,45,45,45,45,]),'cycle':([38,42,43,44,45,46,47,],[46,46,46,46,46,46,46,]),'expression':([60,61,62,63,64,69,73,75,83,84,85,86,87,88,89,90,91,99,100,101,],[66,73,76,79,81,92,73,73,103,104,105,106,107,108,109,110,111,79,79,79,]),'factor':([60,61,62,63,64,69,73,75,83,84,85,86,87,88,89,90,91,99,100,101,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'cte':([60,61,62,63,64,69,73,75,83,84,85,86,87,88,89,90,91,99,100,101,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'list_exp':([61,73,75,],[72,95,96,]),'lst_printing_options':([63,99,100,101,],[77,117,118,119,]),'haselse':([115,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> empezar","S'",1,None,None,None),
  ('empezar -> PROGRAM ID SEMICOMMA var_or_func END','empezar',5,'p_empezar','yacc.py',85),
  ('var_or_func -> vars func_create','var_or_func',2,'p_var_or_func','yacc.py',93),
  ('var_or_func -> func_create','var_or_func',1,'p_var_or_func','yacc.py',94),
  ('func_create -> funcs func_create','func_create',2,'p_func_create','yacc.py',103),
  ('func_create -> EMPTY','func_create',1,'p_func_create','yacc.py',104),
  ('funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA','funcs',7,'p_funcs','yacc.py',111),
  ('body -> LBRACE statment RBRACE','body',3,'p_body','yacc.py',115),
  ('statment -> assign statment','statment',2,'p_statement','yacc.py',119),
  ('statment -> assign','statment',1,'p_statement','yacc.py',120),
  ('statment -> conditions','statment',1,'p_statement','yacc.py',121),
  ('statment -> conditions statment','statment',2,'p_statement','yacc.py',122),
  ('statment -> fcall','statment',1,'p_statement','yacc.py',123),
  ('statment -> fcall statment','statment',2,'p_statement','yacc.py',124),
  ('statment -> imprimir statment','statment',2,'p_statement','yacc.py',125),
  ('statment -> imprimir','statment',1,'p_statement','yacc.py',126),
  ('statment -> cycle statment','statment',2,'p_statement','yacc.py',127),
  ('statment -> cycle','statment',1,'p_statement','yacc.py',128),
  ('statment -> vars','statment',1,'p_statement','yacc.py',129),
  ('statment -> vars statment','statment',2,'p_statement','yacc.py',130),
  ('statment -> EMPTY','statment',1,'p_statement','yacc.py',131),
  ('assign -> ID EQ expression SEMICOMMA','assign',4,'p_assign','yacc.py',139),
  ('cte -> CTE_INT','cte',1,'p_cte','yacc.py',150),
  ('cte -> CTE_FLOAT PUNTO CTE_INT','cte',3,'p_cte','yacc.py',151),
  ('func_vars -> ID DOUBLEPOINT type func_vars','func_vars',4,'p_func_vars','yacc.py',160),
  ('func_vars -> COMMA func_vars','func_vars',2,'p_func_vars','yacc.py',161),
  ('func_vars -> EMPTY','func_vars',1,'p_func_vars','yacc.py',162),
  ('expression -> expression PLUS expression','expression',3,'p_expression','yacc.py',173),
  ('expression -> expression MINUS expression','expression',3,'p_expression','yacc.py',174),
  ('expression -> expression TIMES expression','expression',3,'p_expression','yacc.py',175),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','yacc.py',176),
  ('expression -> expression GT expression','expression',3,'p_expression','yacc.py',177),
  ('expression -> expression GTE expression','expression',3,'p_expression','yacc.py',178),
  ('expression -> expression LT expression','expression',3,'p_expression','yacc.py',179),
  ('expression -> expression LTE expression','expression',3,'p_expression','yacc.py',180),
  ('expression -> expression NT expression','expression',3,'p_expression','yacc.py',181),
  ('expression -> factor','expression',1,'p_expression','yacc.py',182),
  ('expression -> cte','expression',1,'p_expression','yacc.py',183),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor','yacc.py',190),
  ('factor -> ID','factor',1,'p_factor','yacc.py',191),
  ('factor -> cte','factor',1,'p_factor','yacc.py',192),
  ('cycle -> WHILE LPAR expression RPAR DO body SEMICOMMA','cycle',7,'p_cycle','yacc.py',203),
  ('fcall -> ID LPAR list_exp RPAR SEMICOMMA','fcall',5,'p_fcall','yacc.py',207),
  ('list_exp -> expression list_exp','list_exp',2,'p_list_exp','yacc.py',212),
  ('list_exp -> EMPTY','list_exp',1,'p_list_exp','yacc.py',213),
  ('list_exp -> COMMA list_exp','list_exp',2,'p_list_exp','yacc.py',214),
  ('id_cte -> ID','id_cte',1,'p_id_cte','yacc.py',219),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',220),
  ('conditions -> IF LPAR expression RPAR body haselse SEMICOMMA','conditions',7,'p_conditions','yacc.py',223),
  ('haselse -> ELSE body','haselse',2,'p_haselse','yacc.py',227),
  ('haselse -> EMPTY','haselse',1,'p_haselse','yacc.py',228),
  ('imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA','imprimir',5,'p_imprimir','yacc.py',235),
  ('lst_printing_options -> CTE_STRING COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',241),
  ('lst_printing_options -> expression','lst_printing_options',1,'p_lst_printing_options','yacc.py',242),
  ('lst_printing_options -> expression COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',243),
  ('lst_printing_options -> vars','lst_printing_options',1,'p_lst_printing_options','yacc.py',244),
  ('lst_printing_options -> vars COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',245),
  ('lst_printing_options -> CTE_STRING','lst_printing_options',1,'p_lst_printing_options','yacc.py',246),
  ('vars -> VAR lst_var','vars',2,'p_vars','yacc.py',253),
  ('lst_var -> lst_id DOUBLEPOINT type SEMICOMMA','lst_var',4,'p_lst_var','yacc.py',260),
  ('lst_id -> ID lst_id','lst_id',2,'p_lst_id','yacc.py',268),
  ('lst_id -> COMMA lst_id','lst_id',2,'p_lst_id','yacc.py',269),
  ('lst_id -> EMPTY','lst_id',1,'p_lst_id','yacc.py',270),
  ('type -> INT','type',1,'p_type','yacc.py',281),
  ('type -> FLOAT','type',1,'p_type','yacc.py',282),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','yacc.py',287),
]
