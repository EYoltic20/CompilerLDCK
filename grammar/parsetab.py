
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDECOMMA CTE_BOOL CTE_FLOAT CTE_INT CTE_STRING DIVIDE DO DOUBLEPOINT ELSE END EQ FLOAT GT GTE ID IF INT LBRACE LPAR LT LTE MINUS NT PLUS PRINT PROGRAM RBRACE RPAR SEMICOMMA TIMES VAR VOID WHILEempezar : PROGRAM ID SEMICOMMA  var_or_func  ENDvar_or_func : vars func_create\n                   | func_createfunc_create : funcs func_create\n                   | EMPTYbody : LBRACE statment RBRACE statment : assign statment\n                 | assign\n                 | conditions\n                 | conditions statment             \n                 | fcall\n                 | fcall statment             \n                 | imprimir statment\n                 | imprimir\n                 | cycle statment\n                 | cycle\n                 | vars\n                 | vars statmentassign : ID EQ expression SEMICOMMA\n              | ID EQ cte SEMICOMMActe : CTE_INT\n           | CTE_FLOATfuncs : VOID ID LPAR func_vars RPAR   body  SEMICOMMAfunc_vars : ID DOUBLEPOINT type    func_vars\n                 | COMMA func_vars\n                 | EMPTY expression : exp opop : GT exp\n          | GTE exp\n          | LT exp\n          | LTE exp\n          | NT exp\n          | EMPTYexp : termino lopblopb : PLUS termino\n            | MINUS termino\n            | EMPTYtermino : factor lopalopa : TIMES factor\n            | DIVIDE factor\n            | EMPTYcycle : WHILE body DO LPAR expression RPAR SEMICOMMAfcall : ID LPAR list_exp RPAR SEMICOMMAlist_exp : expression list_exp\n                | EMPTY\n                | COMMA list_expfactor : LPAR expression RPAR\n              | lopb id_cte\n              | id_cteid_cte : ID\n              | cteconditions : IF LPAR expression RPAR body haselse SEMICOMMAhaselse : ELSE body\n               | EMPTYimprimir : PRINT LPAR lst_printing_options RPAR SEMICOMMAlst_printing_options : CTE_STRING  COMMA lst_printing_options\n                            | expression \n                            | expression COMMA lst_printing_options\n                            | vars\n                            | vars COMMA lst_printing_options\n                            | CTE_STRINGvars : VAR lst_varlst_var : lst_id DOUBLEPOINT type SEMICOMMA \n               | EMPTYlst_id : ID lst_id\n              | COMMA lst_id\n              | EMPTYtype : INT\n            | FLOAT\n            | VOID EMPTY :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,],[0,-1,]),'ID':([2,8,11,14,16,17,18,25,27,28,29,32,34,38,40,44,45,46,47,48,49,61,62,63,64,66,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,126,128,137,139,],[3,17,20,-62,-64,17,17,30,-68,-69,-70,30,-63,30,50,50,50,50,50,50,50,66,66,66,66,-50,-71,-21,-22,-71,66,-71,66,-49,66,66,-37,66,-37,66,-51,-19,-20,-27,66,66,66,66,66,-33,-34,-48,-38,66,66,-41,-35,-36,66,66,66,66,-28,-29,-30,-31,-32,-39,-40,-47,-43,-55,-52,-42,]),'SEMICOMMA':([3,26,27,28,29,39,54,66,67,68,69,70,71,72,74,76,79,84,93,99,100,101,102,105,107,108,109,113,118,119,120,121,122,123,124,125,127,133,135,136,138,],[4,34,-68,-69,-70,42,-6,-50,91,92,-71,-21,-22,-71,-71,-49,-37,-51,-27,-33,-34,-48,-38,-41,-35,-36,126,128,-28,-29,-30,-31,-32,-39,-40,-47,-71,137,-54,139,-53,]),'VAR':([4,8,14,16,34,40,44,45,46,47,48,49,64,91,92,114,115,116,126,128,137,139,],[8,-71,-62,-64,-63,8,8,8,8,8,8,8,8,-19,-20,8,8,8,-43,-55,-52,-42,]),'VOID':([4,6,8,9,14,16,21,34,35,42,],[11,11,-71,11,-62,-64,29,-63,29,-23,]),'END':([4,5,6,7,8,9,10,13,14,16,19,34,42,],[-71,12,-71,-3,-71,-71,-5,-2,-62,-64,-4,-63,-23,]),'COMMA':([8,14,16,17,18,25,27,28,29,32,34,38,62,66,69,70,71,72,74,76,79,81,83,84,87,88,89,93,99,100,101,102,105,107,108,118,119,120,121,122,123,124,125,],[18,-62,-64,18,18,32,-68,-69,-70,32,-63,32,83,-50,-71,-21,-22,-71,-71,-49,-37,83,83,-51,114,115,116,-27,-33,-34,-48,-38,-41,-35,-36,-28,-29,-30,-31,-32,-39,-40,-47,]),'IF':([8,14,16,34,40,44,45,46,47,48,49,91,92,126,128,137,139,],[-71,-62,-64,-63,51,51,51,51,51,51,51,-19,-20,-43,-55,-52,-42,]),'PRINT':([8,14,16,34,40,44,45,46,47,48,49,91,92,126,128,137,139,],[-71,-62,-64,-63,52,52,52,52,52,52,52,-19,-20,-43,-55,-52,-42,]),'WHILE':([8,14,16,34,40,44,45,46,47,48,49,91,92,126,128,137,139,],[-71,-62,-64,-63,53,53,53,53,53,53,53,-19,-20,-43,-55,-52,-42,]),'RBRACE':([8,14,16,34,43,44,45,46,47,48,49,55,56,57,58,59,60,91,92,126,128,137,139,],[-71,-62,-64,-63,54,-8,-9,-11,-14,-16,-17,-7,-10,-12,-13,-15,-18,-19,-20,-43,-55,-52,-42,]),'RPAR':([8,14,16,25,27,28,29,31,32,33,34,37,38,41,62,66,69,70,71,72,74,76,79,80,81,82,83,84,85,86,87,88,89,93,99,100,101,102,105,106,107,108,110,111,118,119,120,121,122,123,124,125,129,130,131,132,],[-71,-62,-64,-71,-68,-69,-70,36,-71,-26,-63,-25,-71,-24,-71,-50,-71,-21,-22,-71,-71,-49,-37,109,-71,-45,-71,-51,112,113,-61,-57,-59,-27,-33,-34,-48,-38,-41,125,-35,-36,-44,-46,-28,-29,-30,-31,-32,-39,-40,-47,-56,-58,-60,136,]),'DOUBLEPOINT':([8,15,16,17,18,22,23,24,30,],[-71,21,-67,-71,-71,-65,-67,-66,35,]),'LPAR':([20,50,51,52,61,62,63,64,66,69,70,71,72,74,75,76,77,78,79,81,83,84,90,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,],[25,62,63,64,75,75,75,75,-50,-71,-21,-22,-71,-71,75,-49,75,75,-37,75,75,-51,117,-27,75,75,75,75,75,-33,-34,-48,-38,75,75,-41,-35,-36,75,75,75,75,-28,-29,-30,-31,-32,-39,-40,-47,]),'INT':([21,35,],[27,27,]),'FLOAT':([21,35,],[28,28,]),'LBRACE':([36,53,112,134,],[40,40,40,40,]),'EQ':([50,],[61,]),'DO':([54,65,],[-6,90,]),'ELSE':([54,127,],[-6,134,]),'CTE_INT':([61,62,63,64,66,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,],[70,70,70,70,-50,-71,-21,-22,-71,70,-71,70,-49,70,70,-37,70,-37,70,-51,-27,70,70,70,70,70,-33,-34,-48,-38,70,70,-41,-35,-36,70,70,70,70,-28,-29,-30,-31,-32,-39,-40,-47,]),'CTE_FLOAT':([61,62,63,64,66,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,],[71,71,71,71,-50,-71,-21,-22,-71,71,-71,71,-49,71,71,-37,71,-37,71,-51,-27,71,71,71,71,71,-33,-34,-48,-38,71,71,-41,-35,-36,71,71,71,71,-28,-29,-30,-31,-32,-39,-40,-47,]),'PLUS':([61,62,63,64,66,68,69,70,71,72,74,75,76,77,78,79,81,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,],[77,77,77,77,-50,-51,-71,-21,-22,77,-71,77,-49,77,77,-37,77,77,-51,-27,77,77,77,77,77,-33,-34,-48,-38,77,77,-41,-35,-36,77,77,77,77,-28,-29,-30,-31,-32,-39,-40,-47,]),'MINUS':([61,62,63,64,66,68,69,70,71,72,74,75,76,77,78,79,81,83,84,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,],[78,78,78,78,-50,-51,-71,-21,-22,78,-71,78,-49,78,78,-37,78,78,-51,-27,78,78,78,78,78,-33,-34,-48,-38,78,78,-41,-35,-36,78,78,78,78,-28,-29,-30,-31,-32,-39,-40,-47,]),'CTE_STRING':([64,114,115,116,],[87,87,87,87,]),'TIMES':([66,68,70,71,74,76,84,101,125,],[-50,-51,-21,-22,103,-49,-51,-48,-47,]),'DIVIDE':([66,68,70,71,74,76,84,101,125,],[-50,-51,-21,-22,104,-49,-51,-48,-47,]),'GT':([66,68,69,70,71,72,74,76,79,84,100,101,102,105,107,108,123,124,125,],[-50,-51,94,-21,-22,-71,-71,-49,-37,-51,-34,-48,-38,-41,-35,-36,-39,-40,-47,]),'GTE':([66,68,69,70,71,72,74,76,79,84,100,101,102,105,107,108,123,124,125,],[-50,-51,95,-21,-22,-71,-71,-49,-37,-51,-34,-48,-38,-41,-35,-36,-39,-40,-47,]),'LT':([66,68,69,70,71,72,74,76,79,84,100,101,102,105,107,108,123,124,125,],[-50,-51,96,-21,-22,-71,-71,-49,-37,-51,-34,-48,-38,-41,-35,-36,-39,-40,-47,]),'LTE':([66,68,69,70,71,72,74,76,79,84,100,101,102,105,107,108,123,124,125,],[-50,-51,97,-21,-22,-71,-71,-49,-37,-51,-34,-48,-38,-41,-35,-36,-39,-40,-47,]),'NT':([66,68,69,70,71,72,74,76,79,84,100,101,102,105,107,108,123,124,125,],[-50,-51,98,-21,-22,-71,-71,-49,-37,-51,-34,-48,-38,-41,-35,-36,-39,-40,-47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empezar':([0,],[1,]),'var_or_func':([4,],[5,]),'vars':([4,40,44,45,46,47,48,49,64,114,115,116,],[6,49,49,49,49,49,49,49,89,89,89,89,]),'func_create':([4,6,9,],[7,13,19,]),'funcs':([4,6,9,],[9,9,9,]),'EMPTY':([4,6,8,9,17,18,25,32,38,61,62,63,64,69,72,74,75,77,78,81,83,94,95,96,97,98,103,104,114,115,116,117,127,],[10,10,16,10,23,23,33,33,33,79,82,79,79,99,79,105,79,79,79,82,82,79,79,79,79,79,79,79,79,79,79,79,135,]),'lst_var':([8,],[14,]),'lst_id':([8,17,18,],[15,22,24,]),'type':([21,35,],[26,38,]),'func_vars':([25,32,38,],[31,37,41,]),'body':([36,53,112,134,],[39,65,127,138,]),'statment':([40,44,45,46,47,48,49,],[43,55,56,57,58,59,60,]),'assign':([40,44,45,46,47,48,49,],[44,44,44,44,44,44,44,]),'conditions':([40,44,45,46,47,48,49,],[45,45,45,45,45,45,45,]),'fcall':([40,44,45,46,47,48,49,],[46,46,46,46,46,46,46,]),'imprimir':([40,44,45,46,47,48,49,],[47,47,47,47,47,47,47,]),'cycle':([40,44,45,46,47,48,49,],[48,48,48,48,48,48,48,]),'expression':([61,62,63,64,75,81,83,114,115,116,117,],[67,81,85,88,106,81,81,88,88,88,132,]),'cte':([61,62,63,64,73,75,77,78,81,83,94,95,96,97,98,103,104,114,115,116,117,],[68,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'exp':([61,62,63,64,75,81,83,94,95,96,97,98,114,115,116,117,],[69,69,69,69,69,69,69,118,119,120,121,122,69,69,69,69,]),'termino':([61,62,63,64,75,77,78,81,83,94,95,96,97,98,114,115,116,117,],[72,72,72,72,72,107,108,72,72,72,72,72,72,72,72,72,72,72,]),'lopb':([61,62,63,64,72,75,77,78,81,83,94,95,96,97,98,103,104,114,115,116,117,],[73,73,73,73,100,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'factor':([61,62,63,64,75,77,78,81,83,94,95,96,97,98,103,104,114,115,116,117,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,123,124,74,74,74,74,]),'id_cte':([61,62,63,64,73,75,77,78,81,83,94,95,96,97,98,103,104,114,115,116,117,],[76,76,76,76,101,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'list_exp':([62,81,83,],[80,110,111,]),'lst_printing_options':([64,114,115,116,],[86,129,130,131,]),'op':([69,],[93,]),'lopa':([74,],[102,]),'haselse':([127,],[133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> empezar","S'",1,None,None,None),
  ('empezar -> PROGRAM ID SEMICOMMA var_or_func END','empezar',5,'p_empezar','yacc.py',50),
  ('var_or_func -> vars func_create','var_or_func',2,'p_var_or_func','yacc.py',61),
  ('var_or_func -> func_create','var_or_func',1,'p_var_or_func','yacc.py',62),
  ('func_create -> funcs func_create','func_create',2,'p_func_create','yacc.py',70),
  ('func_create -> EMPTY','func_create',1,'p_func_create','yacc.py',71),
  ('body -> LBRACE statment RBRACE','body',3,'p_body','yacc.py',78),
  ('statment -> assign statment','statment',2,'p_statement','yacc.py',81),
  ('statment -> assign','statment',1,'p_statement','yacc.py',82),
  ('statment -> conditions','statment',1,'p_statement','yacc.py',83),
  ('statment -> conditions statment','statment',2,'p_statement','yacc.py',84),
  ('statment -> fcall','statment',1,'p_statement','yacc.py',85),
  ('statment -> fcall statment','statment',2,'p_statement','yacc.py',86),
  ('statment -> imprimir statment','statment',2,'p_statement','yacc.py',87),
  ('statment -> imprimir','statment',1,'p_statement','yacc.py',88),
  ('statment -> cycle statment','statment',2,'p_statement','yacc.py',89),
  ('statment -> cycle','statment',1,'p_statement','yacc.py',90),
  ('statment -> vars','statment',1,'p_statement','yacc.py',91),
  ('statment -> vars statment','statment',2,'p_statement','yacc.py',92),
  ('assign -> ID EQ expression SEMICOMMA','assign',4,'p_assign','yacc.py',97),
  ('assign -> ID EQ cte SEMICOMMA','assign',4,'p_assign','yacc.py',98),
  ('cte -> CTE_INT','cte',1,'p_cte','yacc.py',114),
  ('cte -> CTE_FLOAT','cte',1,'p_cte','yacc.py',115),
  ('funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA','funcs',7,'p_funcs','yacc.py',121),
  ('func_vars -> ID DOUBLEPOINT type func_vars','func_vars',4,'p_func_vars','yacc.py',152),
  ('func_vars -> COMMA func_vars','func_vars',2,'p_func_vars','yacc.py',153),
  ('func_vars -> EMPTY','func_vars',1,'p_func_vars','yacc.py',154),
  ('expression -> exp op','expression',2,'p_expression','yacc.py',164),
  ('op -> GT exp','op',2,'p_op','yacc.py',174),
  ('op -> GTE exp','op',2,'p_op','yacc.py',175),
  ('op -> LT exp','op',2,'p_op','yacc.py',176),
  ('op -> LTE exp','op',2,'p_op','yacc.py',177),
  ('op -> NT exp','op',2,'p_op','yacc.py',178),
  ('op -> EMPTY','op',1,'p_op','yacc.py',179),
  ('exp -> termino lopb','exp',2,'p_exp','yacc.py',189),
  ('lopb -> PLUS termino','lopb',2,'p_lopb','yacc.py',199),
  ('lopb -> MINUS termino','lopb',2,'p_lopb','yacc.py',200),
  ('lopb -> EMPTY','lopb',1,'p_lopb','yacc.py',201),
  ('termino -> factor lopa','termino',2,'p_termino','yacc.py',208),
  ('lopa -> TIMES factor','lopa',2,'p_lopa','yacc.py',217),
  ('lopa -> DIVIDE factor','lopa',2,'p_lopa','yacc.py',218),
  ('lopa -> EMPTY','lopa',1,'p_lopa','yacc.py',219),
  ('cycle -> WHILE body DO LPAR expression RPAR SEMICOMMA','cycle',7,'p_cycle','yacc.py',227),
  ('fcall -> ID LPAR list_exp RPAR SEMICOMMA','fcall',5,'p_fcall','yacc.py',231),
  ('list_exp -> expression list_exp','list_exp',2,'p_list_exp','yacc.py',235),
  ('list_exp -> EMPTY','list_exp',1,'p_list_exp','yacc.py',236),
  ('list_exp -> COMMA list_exp','list_exp',2,'p_list_exp','yacc.py',237),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor','yacc.py',244),
  ('factor -> lopb id_cte','factor',2,'p_factor','yacc.py',245),
  ('factor -> id_cte','factor',1,'p_factor','yacc.py',246),
  ('id_cte -> ID','id_cte',1,'p_id_cte','yacc.py',257),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',258),
  ('conditions -> IF LPAR expression RPAR body haselse SEMICOMMA','conditions',7,'p_conditions','yacc.py',262),
  ('haselse -> ELSE body','haselse',2,'p_haselse','yacc.py',265),
  ('haselse -> EMPTY','haselse',1,'p_haselse','yacc.py',266),
  ('imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA','imprimir',5,'p_imprimir','yacc.py',273),
  ('lst_printing_options -> CTE_STRING COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',277),
  ('lst_printing_options -> expression','lst_printing_options',1,'p_lst_printing_options','yacc.py',278),
  ('lst_printing_options -> expression COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',279),
  ('lst_printing_options -> vars','lst_printing_options',1,'p_lst_printing_options','yacc.py',280),
  ('lst_printing_options -> vars COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',281),
  ('lst_printing_options -> CTE_STRING','lst_printing_options',1,'p_lst_printing_options','yacc.py',282),
  ('vars -> VAR lst_var','vars',2,'p_vars','yacc.py',289),
  ('lst_var -> lst_id DOUBLEPOINT type SEMICOMMA','lst_var',4,'p_lst_var','yacc.py',292),
  ('lst_var -> EMPTY','lst_var',1,'p_lst_var','yacc.py',293),
  ('lst_id -> ID lst_id','lst_id',2,'p_lst_id','yacc.py',315),
  ('lst_id -> COMMA lst_id','lst_id',2,'p_lst_id','yacc.py',316),
  ('lst_id -> EMPTY','lst_id',1,'p_lst_id','yacc.py',317),
  ('type -> INT','type',1,'p_type','yacc.py',330),
  ('type -> FLOAT','type',1,'p_type','yacc.py',331),
  ('type -> VOID','type',1,'p_type','yacc.py',332),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','yacc.py',336),
]
