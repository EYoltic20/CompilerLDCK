
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDECOMMA CTE_FLOAT CTE_INT CTE_STRING DIVIDE DO DOUBLEPOINT ELSE END EQ FLOAT GT GTE ID IF INT LBRACE LPAR LT LTE MINUS NT PLUS PRINT PROGRAM RBRACE RPAR SEMICOMMA TIMES VAR VOID WHILEempezar : PROGRAM ID SEMICOMMA var_or_func  ENDvar_or_func : vars func_create\n                   | func_createfunc_create : funcs func_create\n                   | EMPTYbody : LBRACE statment RBRACE statment : assign statment\n                 | assign\n                 | conditions\n                 | conditions statment             \n                 | fcall\n                 | fcall statment             \n                 | imprimir statment\n                 | imprimir\n                 | vars\n                 | vars statmentassign : ID EQ expression SEMICOMMA\n              | ID EQ cte SEMICOMMActe : CTE_INT\n           | CTE_FLOATfuncs : VOID ID LPAR func_vars RPAR   body  SEMICOMMAfunc_vars : ID DOUBLEPOINT type  COMMA  func_vars\n                 |  EMPTY expression : exp opop : GT exp\n          | GTE exp\n          | LT exp\n          | LTE exp\n          | NT exp\n          | EMPTYexp : termino lopblopb : PLUS termino\n            | MINUS termino\n            | EMPTYtermino : factor lopalopa : TIMES factor\n            | DIVIDE factor\n            | EMPTYcycle : WHILE body DO LPAR expression RPAR SEMICOMMAfcall : ID LPAR list_exp RPAR SEMICOMMAlist_exp : expression list_exp\n                | EMPTY\n                | COMMA list_expfactor : LPAR expression RPAR\n              | lopb id_cte\n              | id_cteid_cte : ID\n              | cteconditions : IF LPAR expression RPAR body haselse SEMICOMMAhaselse : ELSE body\n               | EMPTYimprimir : PRINT LPAR lst_printing_options RPAR SEMICOMMAlst_printing_options : CTE_STRING  COMMA lst_printing_options\n                            | expression \n                            | expression COMMA lst_printing_options\n                            | vars\n                            | vars COMMA lst_printing_options\n                            | CTE_STRINGvars : VAR lst_varlst_var : lst_id DOUBLEPOINT type SEMICOMMA \n               | EMPTYlst_id : ID lst_id\n              | COMMA lst_id\n              | EMPTYtype : INT\n            | FLOAT\n            | VOID EMPTY :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,],[0,-1,]),'ID':([2,8,11,14,16,17,18,25,33,38,39,42,43,44,45,46,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,108,109,110,111,112,113,114,115,116,117,118,119,121,128,],[3,17,20,-59,-61,17,17,30,-60,47,30,47,47,47,47,47,61,61,61,61,-47,-68,-19,-20,-68,61,-68,61,-46,61,61,-34,61,-34,61,-48,-17,-18,-24,61,61,61,61,61,-30,-31,-45,-35,61,61,-38,-32,-33,61,61,61,-25,-26,-27,-28,-29,-36,-37,-44,-40,-52,-49,]),'SEMICOMMA':([3,26,27,28,29,37,51,61,62,63,64,65,66,67,69,71,74,79,87,93,94,95,96,99,101,102,103,107,111,112,113,114,115,116,117,118,120,125,127,129,],[4,33,-65,-66,-67,40,-6,-47,85,86,-68,-19,-20,-68,-68,-46,-34,-48,-24,-30,-31,-45,-35,-38,-32,-33,119,121,-25,-26,-27,-28,-29,-36,-37,-44,-68,128,-51,-50,]),'VAR':([4,8,14,16,33,38,42,43,44,45,46,60,85,86,108,109,110,119,121,128,],[8,-68,-59,-61,-60,8,8,8,8,8,8,8,-17,-18,8,8,8,-40,-52,-49,]),'VOID':([4,6,8,9,14,16,21,33,34,40,],[11,11,-68,11,-59,-61,29,-60,29,-21,]),'END':([4,5,6,7,8,9,10,13,14,16,19,33,40,],[-68,12,-68,-3,-68,-68,-5,-2,-59,-61,-4,-60,-21,]),'COMMA':([8,14,16,17,18,27,28,29,33,36,58,61,64,65,66,67,69,71,74,76,78,79,82,83,84,87,93,94,95,96,99,101,102,111,112,113,114,115,116,117,118,],[18,-59,-61,18,18,-65,-66,-67,-60,39,78,-47,-68,-19,-20,-68,-68,-46,-34,78,78,-48,108,109,110,-24,-30,-31,-45,-35,-38,-32,-33,-25,-26,-27,-28,-29,-36,-37,-44,]),'IF':([8,14,16,33,38,42,43,44,45,46,85,86,119,121,128,],[-68,-59,-61,-60,48,48,48,48,48,48,-17,-18,-40,-52,-49,]),'PRINT':([8,14,16,33,38,42,43,44,45,46,85,86,119,121,128,],[-68,-59,-61,-60,49,49,49,49,49,49,-17,-18,-40,-52,-49,]),'RBRACE':([8,14,16,33,41,42,43,44,45,46,52,53,54,55,56,85,86,119,121,128,],[-68,-59,-61,-60,51,-8,-9,-11,-14,-15,-7,-10,-12,-13,-16,-17,-18,-40,-52,-49,]),'RPAR':([8,14,16,25,31,32,33,39,50,58,61,64,65,66,67,69,71,74,75,76,77,78,79,80,81,82,83,84,87,93,94,95,96,99,100,101,102,104,105,111,112,113,114,115,116,117,118,122,123,124,],[-68,-59,-61,-68,35,-23,-60,-68,-22,-68,-47,-68,-19,-20,-68,-68,-46,-34,103,-68,-42,-68,-48,106,107,-58,-54,-56,-24,-30,-31,-45,-35,-38,118,-32,-33,-41,-43,-25,-26,-27,-28,-29,-36,-37,-44,-53,-55,-57,]),'DOUBLEPOINT':([8,15,16,17,18,22,23,24,30,],[-68,21,-64,-68,-68,-62,-64,-63,34,]),'LPAR':([20,47,48,49,57,58,59,60,61,64,65,66,67,69,70,71,72,73,74,76,78,79,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,108,109,110,111,112,113,114,115,116,117,118,],[25,58,59,60,70,70,70,70,-47,-68,-19,-20,-68,-68,70,-46,70,70,-34,70,70,-48,-24,70,70,70,70,70,-30,-31,-45,-35,70,70,-38,-32,-33,70,70,70,-25,-26,-27,-28,-29,-36,-37,-44,]),'INT':([21,34,],[27,27,]),'FLOAT':([21,34,],[28,28,]),'LBRACE':([35,106,126,],[38,38,38,]),'EQ':([47,],[57,]),'ELSE':([51,120,],[-6,126,]),'CTE_INT':([57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,108,109,110,111,112,113,114,115,116,117,118,],[65,65,65,65,-47,-68,-19,-20,-68,65,-68,65,-46,65,65,-34,65,-34,65,-48,-24,65,65,65,65,65,-30,-31,-45,-35,65,65,-38,-32,-33,65,65,65,-25,-26,-27,-28,-29,-36,-37,-44,]),'CTE_FLOAT':([57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,108,109,110,111,112,113,114,115,116,117,118,],[66,66,66,66,-47,-68,-19,-20,-68,66,-68,66,-46,66,66,-34,66,-34,66,-48,-24,66,66,66,66,66,-30,-31,-45,-35,66,66,-38,-32,-33,66,66,66,-25,-26,-27,-28,-29,-36,-37,-44,]),'PLUS':([57,58,59,60,61,63,64,65,66,67,69,70,71,72,73,74,76,78,79,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,108,109,110,111,112,113,114,115,116,117,118,],[72,72,72,72,-47,-48,-68,-19,-20,72,-68,72,-46,72,72,-34,72,72,-48,-24,72,72,72,72,72,-30,-31,-45,-35,72,72,-38,-32,-33,72,72,72,-25,-26,-27,-28,-29,-36,-37,-44,]),'MINUS':([57,58,59,60,61,63,64,65,66,67,69,70,71,72,73,74,76,78,79,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,108,109,110,111,112,113,114,115,116,117,118,],[73,73,73,73,-47,-48,-68,-19,-20,73,-68,73,-46,73,73,-34,73,73,-48,-24,73,73,73,73,73,-30,-31,-45,-35,73,73,-38,-32,-33,73,73,73,-25,-26,-27,-28,-29,-36,-37,-44,]),'CTE_STRING':([60,108,109,110,],[82,82,82,82,]),'TIMES':([61,63,65,66,69,71,79,95,118,],[-47,-48,-19,-20,97,-46,-48,-45,-44,]),'DIVIDE':([61,63,65,66,69,71,79,95,118,],[-47,-48,-19,-20,98,-46,-48,-45,-44,]),'GT':([61,63,64,65,66,67,69,71,74,79,94,95,96,99,101,102,116,117,118,],[-47,-48,88,-19,-20,-68,-68,-46,-34,-48,-31,-45,-35,-38,-32,-33,-36,-37,-44,]),'GTE':([61,63,64,65,66,67,69,71,74,79,94,95,96,99,101,102,116,117,118,],[-47,-48,89,-19,-20,-68,-68,-46,-34,-48,-31,-45,-35,-38,-32,-33,-36,-37,-44,]),'LT':([61,63,64,65,66,67,69,71,74,79,94,95,96,99,101,102,116,117,118,],[-47,-48,90,-19,-20,-68,-68,-46,-34,-48,-31,-45,-35,-38,-32,-33,-36,-37,-44,]),'LTE':([61,63,64,65,66,67,69,71,74,79,94,95,96,99,101,102,116,117,118,],[-47,-48,91,-19,-20,-68,-68,-46,-34,-48,-31,-45,-35,-38,-32,-33,-36,-37,-44,]),'NT':([61,63,64,65,66,67,69,71,74,79,94,95,96,99,101,102,116,117,118,],[-47,-48,92,-19,-20,-68,-68,-46,-34,-48,-31,-45,-35,-38,-32,-33,-36,-37,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empezar':([0,],[1,]),'var_or_func':([4,],[5,]),'vars':([4,38,42,43,44,45,46,60,108,109,110,],[6,46,46,46,46,46,46,84,84,84,84,]),'func_create':([4,6,9,],[7,13,19,]),'funcs':([4,6,9,],[9,9,9,]),'EMPTY':([4,6,8,9,17,18,25,39,57,58,59,60,64,67,69,70,72,73,76,78,88,89,90,91,92,97,98,108,109,110,120,],[10,10,16,10,23,23,32,32,74,77,74,74,93,74,99,74,74,74,77,77,74,74,74,74,74,74,74,74,74,74,127,]),'lst_var':([8,],[14,]),'lst_id':([8,17,18,],[15,22,24,]),'type':([21,34,],[26,36,]),'func_vars':([25,39,],[31,50,]),'body':([35,106,126,],[37,120,129,]),'statment':([38,42,43,44,45,46,],[41,52,53,54,55,56,]),'assign':([38,42,43,44,45,46,],[42,42,42,42,42,42,]),'conditions':([38,42,43,44,45,46,],[43,43,43,43,43,43,]),'fcall':([38,42,43,44,45,46,],[44,44,44,44,44,44,]),'imprimir':([38,42,43,44,45,46,],[45,45,45,45,45,45,]),'expression':([57,58,59,60,70,76,78,108,109,110,],[62,76,80,83,100,76,76,83,83,83,]),'cte':([57,58,59,60,68,70,72,73,76,78,88,89,90,91,92,97,98,108,109,110,],[63,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'exp':([57,58,59,60,70,76,78,88,89,90,91,92,108,109,110,],[64,64,64,64,64,64,64,111,112,113,114,115,64,64,64,]),'termino':([57,58,59,60,70,72,73,76,78,88,89,90,91,92,108,109,110,],[67,67,67,67,67,101,102,67,67,67,67,67,67,67,67,67,67,]),'lopb':([57,58,59,60,67,70,72,73,76,78,88,89,90,91,92,97,98,108,109,110,],[68,68,68,68,94,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'factor':([57,58,59,60,70,72,73,76,78,88,89,90,91,92,97,98,108,109,110,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,116,117,69,69,69,]),'id_cte':([57,58,59,60,68,70,72,73,76,78,88,89,90,91,92,97,98,108,109,110,],[71,71,71,71,95,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'list_exp':([58,76,78,],[75,104,105,]),'lst_printing_options':([60,108,109,110,],[81,122,123,124,]),'op':([64,],[87,]),'lopa':([69,],[96,]),'haselse':([120,],[125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> empezar","S'",1,None,None,None),
  ('empezar -> PROGRAM ID SEMICOMMA var_or_func END','empezar',5,'p_empezar','yacc.py',27),
  ('var_or_func -> vars func_create','var_or_func',2,'p_var_or_func','yacc.py',33),
  ('var_or_func -> func_create','var_or_func',1,'p_var_or_func','yacc.py',34),
  ('func_create -> funcs func_create','func_create',2,'p_func_create','yacc.py',41),
  ('func_create -> EMPTY','func_create',1,'p_func_create','yacc.py',42),
  ('body -> LBRACE statment RBRACE','body',3,'p_body','yacc.py',49),
  ('statment -> assign statment','statment',2,'p_statement','yacc.py',52),
  ('statment -> assign','statment',1,'p_statement','yacc.py',53),
  ('statment -> conditions','statment',1,'p_statement','yacc.py',54),
  ('statment -> conditions statment','statment',2,'p_statement','yacc.py',55),
  ('statment -> fcall','statment',1,'p_statement','yacc.py',56),
  ('statment -> fcall statment','statment',2,'p_statement','yacc.py',57),
  ('statment -> imprimir statment','statment',2,'p_statement','yacc.py',58),
  ('statment -> imprimir','statment',1,'p_statement','yacc.py',59),
  ('statment -> vars','statment',1,'p_statement','yacc.py',60),
  ('statment -> vars statment','statment',2,'p_statement','yacc.py',61),
  ('assign -> ID EQ expression SEMICOMMA','assign',4,'p_assign','yacc.py',66),
  ('assign -> ID EQ cte SEMICOMMA','assign',4,'p_assign','yacc.py',67),
  ('cte -> CTE_INT','cte',1,'p_cte','yacc.py',74),
  ('cte -> CTE_FLOAT','cte',1,'p_cte','yacc.py',75),
  ('funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA','funcs',7,'p_funcs','yacc.py',79),
  ('func_vars -> ID DOUBLEPOINT type COMMA func_vars','func_vars',5,'p_func_vars','yacc.py',89),
  ('func_vars -> EMPTY','func_vars',1,'p_func_vars','yacc.py',90),
  ('expression -> exp op','expression',2,'p_expression','yacc.py',100),
  ('op -> GT exp','op',2,'p_op','yacc.py',104),
  ('op -> GTE exp','op',2,'p_op','yacc.py',105),
  ('op -> LT exp','op',2,'p_op','yacc.py',106),
  ('op -> LTE exp','op',2,'p_op','yacc.py',107),
  ('op -> NT exp','op',2,'p_op','yacc.py',108),
  ('op -> EMPTY','op',1,'p_op','yacc.py',109),
  ('exp -> termino lopb','exp',2,'p_exp','yacc.py',113),
  ('lopb -> PLUS termino','lopb',2,'p_lopb','yacc.py',117),
  ('lopb -> MINUS termino','lopb',2,'p_lopb','yacc.py',118),
  ('lopb -> EMPTY','lopb',1,'p_lopb','yacc.py',119),
  ('termino -> factor lopa','termino',2,'p_termino','yacc.py',125),
  ('lopa -> TIMES factor','lopa',2,'p_lopa','yacc.py',129),
  ('lopa -> DIVIDE factor','lopa',2,'p_lopa','yacc.py',130),
  ('lopa -> EMPTY','lopa',1,'p_lopa','yacc.py',131),
  ('cycle -> WHILE body DO LPAR expression RPAR SEMICOMMA','cycle',7,'p_cycle','yacc.py',137),
  ('fcall -> ID LPAR list_exp RPAR SEMICOMMA','fcall',5,'p_fcall','yacc.py',141),
  ('list_exp -> expression list_exp','list_exp',2,'p_list_exp','yacc.py',145),
  ('list_exp -> EMPTY','list_exp',1,'p_list_exp','yacc.py',146),
  ('list_exp -> COMMA list_exp','list_exp',2,'p_list_exp','yacc.py',147),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor','yacc.py',154),
  ('factor -> lopb id_cte','factor',2,'p_factor','yacc.py',155),
  ('factor -> id_cte','factor',1,'p_factor','yacc.py',156),
  ('id_cte -> ID','id_cte',1,'p_id_cte','yacc.py',164),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',165),
  ('conditions -> IF LPAR expression RPAR body haselse SEMICOMMA','conditions',7,'p_conditions','yacc.py',169),
  ('haselse -> ELSE body','haselse',2,'p_haselse','yacc.py',172),
  ('haselse -> EMPTY','haselse',1,'p_haselse','yacc.py',173),
  ('imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA','imprimir',5,'p_imprimir','yacc.py',180),
  ('lst_printing_options -> CTE_STRING COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',184),
  ('lst_printing_options -> expression','lst_printing_options',1,'p_lst_printing_options','yacc.py',185),
  ('lst_printing_options -> expression COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',186),
  ('lst_printing_options -> vars','lst_printing_options',1,'p_lst_printing_options','yacc.py',187),
  ('lst_printing_options -> vars COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',188),
  ('lst_printing_options -> CTE_STRING','lst_printing_options',1,'p_lst_printing_options','yacc.py',189),
  ('vars -> VAR lst_var','vars',2,'p_vars','yacc.py',196),
  ('lst_var -> lst_id DOUBLEPOINT type SEMICOMMA','lst_var',4,'p_lst_var','yacc.py',200),
  ('lst_var -> EMPTY','lst_var',1,'p_lst_var','yacc.py',201),
  ('lst_id -> ID lst_id','lst_id',2,'p_lst_id','yacc.py',212),
  ('lst_id -> COMMA lst_id','lst_id',2,'p_lst_id','yacc.py',213),
  ('lst_id -> EMPTY','lst_id',1,'p_lst_id','yacc.py',214),
  ('type -> INT','type',1,'p_type','yacc.py',226),
  ('type -> FLOAT','type',1,'p_type','yacc.py',227),
  ('type -> VOID','type',1,'p_type','yacc.py',228),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','yacc.py',232),
]
