
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDECOMMA CTE_FLOAT CTE_INT CTE_STRING DIVIDE DO DOUBLEPOINT ELSE END EQ FLOAT GT GTE ID IF INT LBRACE LPAR LT LTE MINUS NT PLUS PRINT PROGRAM RBRACE RPAR SEMICOMMA TIMES VAR VOID WHILEempezar : PROGRAM ID SEMICOMMA  var_or_func  ENDvar_or_func : vars func_create\n                   | func_createfunc_create : funcs func_create\n                   | EMPTYbody : LBRACE statment RBRACE statment : assign statment\n                 | assign\n                 | conditions\n                 | conditions statment             \n                 | fcall\n                 | fcall statment             \n                 | imprimir statment\n                 | imprimir\n                 | vars\n                 | vars statmentassign : ID EQ expression SEMICOMMA\n              | ID EQ cte SEMICOMMActe : CTE_INT\n           | CTE_FLOATfuncs : VOID ID LPAR func_vars RPAR   body  SEMICOMMAfunc_vars : ID DOUBLEPOINT type    func_vars\n                 | COMMA func_vars\n                 | EMPTY expression : exp opop : GT exp\n          | GTE exp\n          | LT exp\n          | LTE exp\n          | NT exp\n          | EMPTYexp : termino lopblopb : PLUS termino\n            | MINUS termino\n            | EMPTYtermino : factor lopalopa : TIMES factor\n            | DIVIDE factor\n            | EMPTYcycle : WHILE body DO LPAR expression RPAR SEMICOMMAfcall : ID LPAR list_exp RPAR SEMICOMMAlist_exp : expression list_exp\n                | EMPTY\n                | COMMA list_expfactor : LPAR expression RPAR\n              | lopb id_cte\n              | id_cteid_cte : ID\n              | cteconditions : IF LPAR expression RPAR body haselse SEMICOMMAhaselse : ELSE body\n               | EMPTYimprimir : PRINT LPAR lst_printing_options RPAR SEMICOMMAlst_printing_options : CTE_STRING  COMMA lst_printing_options\n                            | expression \n                            | expression COMMA lst_printing_options\n                            | vars\n                            | vars COMMA lst_printing_options\n                            | CTE_STRINGvars : VAR lst_varlst_var : lst_id DOUBLEPOINT type SEMICOMMA \n               | EMPTYlst_id : ID lst_id\n              | COMMA lst_id\n              | EMPTYtype : INT\n            | FLOAT\n            | VOID EMPTY :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,],[0,-1,]),'ID':([2,8,11,14,16,17,18,25,27,28,29,32,34,38,40,44,45,46,47,48,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,109,110,111,112,113,114,115,116,117,118,119,120,122,129,],[3,17,20,-60,-62,17,17,30,-66,-67,-68,30,-61,30,49,49,49,49,49,49,62,62,62,62,-48,-69,-19,-20,-69,62,-69,62,-47,62,62,-35,62,-35,62,-49,-17,-18,-25,62,62,62,62,62,-31,-32,-46,-36,62,62,-39,-33,-34,62,62,62,-26,-27,-28,-29,-30,-37,-38,-45,-41,-53,-50,]),'SEMICOMMA':([3,26,27,28,29,39,52,62,63,64,65,66,67,68,70,72,75,80,88,94,95,96,97,100,102,103,104,108,112,113,114,115,116,117,118,119,121,126,128,130,],[4,34,-66,-67,-68,42,-6,-48,86,87,-69,-19,-20,-69,-69,-47,-35,-49,-25,-31,-32,-46,-36,-39,-33,-34,120,122,-26,-27,-28,-29,-30,-37,-38,-45,-69,129,-52,-51,]),'VAR':([4,8,14,16,34,40,44,45,46,47,48,61,86,87,109,110,111,120,122,129,],[8,-69,-60,-62,-61,8,8,8,8,8,8,8,-17,-18,8,8,8,-41,-53,-50,]),'VOID':([4,6,8,9,14,16,21,34,35,42,],[11,11,-69,11,-60,-62,29,-61,29,-21,]),'END':([4,5,6,7,8,9,10,13,14,16,19,34,42,],[-69,12,-69,-3,-69,-69,-5,-2,-60,-62,-4,-61,-21,]),'COMMA':([8,14,16,17,18,25,27,28,29,32,34,38,59,62,65,66,67,68,70,72,75,77,79,80,83,84,85,88,94,95,96,97,100,102,103,112,113,114,115,116,117,118,119,],[18,-60,-62,18,18,32,-66,-67,-68,32,-61,32,79,-48,-69,-19,-20,-69,-69,-47,-35,79,79,-49,109,110,111,-25,-31,-32,-46,-36,-39,-33,-34,-26,-27,-28,-29,-30,-37,-38,-45,]),'IF':([8,14,16,34,40,44,45,46,47,48,86,87,120,122,129,],[-69,-60,-62,-61,50,50,50,50,50,50,-17,-18,-41,-53,-50,]),'PRINT':([8,14,16,34,40,44,45,46,47,48,86,87,120,122,129,],[-69,-60,-62,-61,51,51,51,51,51,51,-17,-18,-41,-53,-50,]),'RBRACE':([8,14,16,34,43,44,45,46,47,48,53,54,55,56,57,86,87,120,122,129,],[-69,-60,-62,-61,52,-8,-9,-11,-14,-15,-7,-10,-12,-13,-16,-17,-18,-41,-53,-50,]),'RPAR':([8,14,16,25,27,28,29,31,32,33,34,37,38,41,59,62,65,66,67,68,70,72,75,76,77,78,79,80,81,82,83,84,85,88,94,95,96,97,100,101,102,103,105,106,112,113,114,115,116,117,118,119,123,124,125,],[-69,-60,-62,-69,-66,-67,-68,36,-69,-24,-61,-23,-69,-22,-69,-48,-69,-19,-20,-69,-69,-47,-35,104,-69,-43,-69,-49,107,108,-59,-55,-57,-25,-31,-32,-46,-36,-39,119,-33,-34,-42,-44,-26,-27,-28,-29,-30,-37,-38,-45,-54,-56,-58,]),'DOUBLEPOINT':([8,15,16,17,18,22,23,24,30,],[-69,21,-65,-69,-69,-63,-65,-64,35,]),'LPAR':([20,49,50,51,58,59,60,61,62,65,66,67,68,70,71,72,73,74,75,77,79,80,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,109,110,111,112,113,114,115,116,117,118,119,],[25,59,60,61,71,71,71,71,-48,-69,-19,-20,-69,-69,71,-47,71,71,-35,71,71,-49,-25,71,71,71,71,71,-31,-32,-46,-36,71,71,-39,-33,-34,71,71,71,-26,-27,-28,-29,-30,-37,-38,-45,]),'INT':([21,35,],[27,27,]),'FLOAT':([21,35,],[28,28,]),'LBRACE':([36,107,127,],[40,40,40,]),'EQ':([49,],[58,]),'ELSE':([52,121,],[-6,127,]),'CTE_INT':([58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,109,110,111,112,113,114,115,116,117,118,119,],[66,66,66,66,-48,-69,-19,-20,-69,66,-69,66,-47,66,66,-35,66,-35,66,-49,-25,66,66,66,66,66,-31,-32,-46,-36,66,66,-39,-33,-34,66,66,66,-26,-27,-28,-29,-30,-37,-38,-45,]),'CTE_FLOAT':([58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,109,110,111,112,113,114,115,116,117,118,119,],[67,67,67,67,-48,-69,-19,-20,-69,67,-69,67,-47,67,67,-35,67,-35,67,-49,-25,67,67,67,67,67,-31,-32,-46,-36,67,67,-39,-33,-34,67,67,67,-26,-27,-28,-29,-30,-37,-38,-45,]),'PLUS':([58,59,60,61,62,64,65,66,67,68,70,71,72,73,74,75,77,79,80,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,109,110,111,112,113,114,115,116,117,118,119,],[73,73,73,73,-48,-49,-69,-19,-20,73,-69,73,-47,73,73,-35,73,73,-49,-25,73,73,73,73,73,-31,-32,-46,-36,73,73,-39,-33,-34,73,73,73,-26,-27,-28,-29,-30,-37,-38,-45,]),'MINUS':([58,59,60,61,62,64,65,66,67,68,70,71,72,73,74,75,77,79,80,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,109,110,111,112,113,114,115,116,117,118,119,],[74,74,74,74,-48,-49,-69,-19,-20,74,-69,74,-47,74,74,-35,74,74,-49,-25,74,74,74,74,74,-31,-32,-46,-36,74,74,-39,-33,-34,74,74,74,-26,-27,-28,-29,-30,-37,-38,-45,]),'CTE_STRING':([61,109,110,111,],[83,83,83,83,]),'TIMES':([62,64,66,67,70,72,80,96,119,],[-48,-49,-19,-20,98,-47,-49,-46,-45,]),'DIVIDE':([62,64,66,67,70,72,80,96,119,],[-48,-49,-19,-20,99,-47,-49,-46,-45,]),'GT':([62,64,65,66,67,68,70,72,75,80,95,96,97,100,102,103,117,118,119,],[-48,-49,89,-19,-20,-69,-69,-47,-35,-49,-32,-46,-36,-39,-33,-34,-37,-38,-45,]),'GTE':([62,64,65,66,67,68,70,72,75,80,95,96,97,100,102,103,117,118,119,],[-48,-49,90,-19,-20,-69,-69,-47,-35,-49,-32,-46,-36,-39,-33,-34,-37,-38,-45,]),'LT':([62,64,65,66,67,68,70,72,75,80,95,96,97,100,102,103,117,118,119,],[-48,-49,91,-19,-20,-69,-69,-47,-35,-49,-32,-46,-36,-39,-33,-34,-37,-38,-45,]),'LTE':([62,64,65,66,67,68,70,72,75,80,95,96,97,100,102,103,117,118,119,],[-48,-49,92,-19,-20,-69,-69,-47,-35,-49,-32,-46,-36,-39,-33,-34,-37,-38,-45,]),'NT':([62,64,65,66,67,68,70,72,75,80,95,96,97,100,102,103,117,118,119,],[-48,-49,93,-19,-20,-69,-69,-47,-35,-49,-32,-46,-36,-39,-33,-34,-37,-38,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empezar':([0,],[1,]),'var_or_func':([4,],[5,]),'vars':([4,40,44,45,46,47,48,61,109,110,111,],[6,48,48,48,48,48,48,85,85,85,85,]),'func_create':([4,6,9,],[7,13,19,]),'funcs':([4,6,9,],[9,9,9,]),'EMPTY':([4,6,8,9,17,18,25,32,38,58,59,60,61,65,68,70,71,73,74,77,79,89,90,91,92,93,98,99,109,110,111,121,],[10,10,16,10,23,23,33,33,33,75,78,75,75,94,75,100,75,75,75,78,78,75,75,75,75,75,75,75,75,75,75,128,]),'lst_var':([8,],[14,]),'lst_id':([8,17,18,],[15,22,24,]),'type':([21,35,],[26,38,]),'func_vars':([25,32,38,],[31,37,41,]),'body':([36,107,127,],[39,121,130,]),'statment':([40,44,45,46,47,48,],[43,53,54,55,56,57,]),'assign':([40,44,45,46,47,48,],[44,44,44,44,44,44,]),'conditions':([40,44,45,46,47,48,],[45,45,45,45,45,45,]),'fcall':([40,44,45,46,47,48,],[46,46,46,46,46,46,]),'imprimir':([40,44,45,46,47,48,],[47,47,47,47,47,47,]),'expression':([58,59,60,61,71,77,79,109,110,111,],[63,77,81,84,101,77,77,84,84,84,]),'cte':([58,59,60,61,69,71,73,74,77,79,89,90,91,92,93,98,99,109,110,111,],[64,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'exp':([58,59,60,61,71,77,79,89,90,91,92,93,109,110,111,],[65,65,65,65,65,65,65,112,113,114,115,116,65,65,65,]),'termino':([58,59,60,61,71,73,74,77,79,89,90,91,92,93,109,110,111,],[68,68,68,68,68,102,103,68,68,68,68,68,68,68,68,68,68,]),'lopb':([58,59,60,61,68,71,73,74,77,79,89,90,91,92,93,98,99,109,110,111,],[69,69,69,69,95,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'factor':([58,59,60,61,71,73,74,77,79,89,90,91,92,93,98,99,109,110,111,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,117,118,70,70,70,]),'id_cte':([58,59,60,61,69,71,73,74,77,79,89,90,91,92,93,98,99,109,110,111,],[72,72,72,72,96,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'list_exp':([59,77,79,],[76,105,106,]),'lst_printing_options':([61,109,110,111,],[82,123,124,125,]),'op':([65,],[88,]),'lopa':([70,],[97,]),'haselse':([121,],[126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> empezar","S'",1,None,None,None),
  ('empezar -> PROGRAM ID SEMICOMMA var_or_func END','empezar',5,'p_empezar','yacc.py',31),
  ('var_or_func -> vars func_create','var_or_func',2,'p_var_or_func','yacc.py',42),
  ('var_or_func -> func_create','var_or_func',1,'p_var_or_func','yacc.py',43),
  ('func_create -> funcs func_create','func_create',2,'p_func_create','yacc.py',51),
  ('func_create -> EMPTY','func_create',1,'p_func_create','yacc.py',52),
  ('body -> LBRACE statment RBRACE','body',3,'p_body','yacc.py',59),
  ('statment -> assign statment','statment',2,'p_statement','yacc.py',62),
  ('statment -> assign','statment',1,'p_statement','yacc.py',63),
  ('statment -> conditions','statment',1,'p_statement','yacc.py',64),
  ('statment -> conditions statment','statment',2,'p_statement','yacc.py',65),
  ('statment -> fcall','statment',1,'p_statement','yacc.py',66),
  ('statment -> fcall statment','statment',2,'p_statement','yacc.py',67),
  ('statment -> imprimir statment','statment',2,'p_statement','yacc.py',68),
  ('statment -> imprimir','statment',1,'p_statement','yacc.py',69),
  ('statment -> vars','statment',1,'p_statement','yacc.py',70),
  ('statment -> vars statment','statment',2,'p_statement','yacc.py',71),
  ('assign -> ID EQ expression SEMICOMMA','assign',4,'p_assign','yacc.py',76),
  ('assign -> ID EQ cte SEMICOMMA','assign',4,'p_assign','yacc.py',77),
  ('cte -> CTE_INT','cte',1,'p_cte','yacc.py',84),
  ('cte -> CTE_FLOAT','cte',1,'p_cte','yacc.py',85),
  ('funcs -> VOID ID LPAR func_vars RPAR body SEMICOMMA','funcs',7,'p_funcs','yacc.py',89),
  ('func_vars -> ID DOUBLEPOINT type func_vars','func_vars',4,'p_func_vars','yacc.py',100),
  ('func_vars -> COMMA func_vars','func_vars',2,'p_func_vars','yacc.py',101),
  ('func_vars -> EMPTY','func_vars',1,'p_func_vars','yacc.py',102),
  ('expression -> exp op','expression',2,'p_expression','yacc.py',112),
  ('op -> GT exp','op',2,'p_op','yacc.py',116),
  ('op -> GTE exp','op',2,'p_op','yacc.py',117),
  ('op -> LT exp','op',2,'p_op','yacc.py',118),
  ('op -> LTE exp','op',2,'p_op','yacc.py',119),
  ('op -> NT exp','op',2,'p_op','yacc.py',120),
  ('op -> EMPTY','op',1,'p_op','yacc.py',121),
  ('exp -> termino lopb','exp',2,'p_exp','yacc.py',125),
  ('lopb -> PLUS termino','lopb',2,'p_lopb','yacc.py',129),
  ('lopb -> MINUS termino','lopb',2,'p_lopb','yacc.py',130),
  ('lopb -> EMPTY','lopb',1,'p_lopb','yacc.py',131),
  ('termino -> factor lopa','termino',2,'p_termino','yacc.py',137),
  ('lopa -> TIMES factor','lopa',2,'p_lopa','yacc.py',141),
  ('lopa -> DIVIDE factor','lopa',2,'p_lopa','yacc.py',142),
  ('lopa -> EMPTY','lopa',1,'p_lopa','yacc.py',143),
  ('cycle -> WHILE body DO LPAR expression RPAR SEMICOMMA','cycle',7,'p_cycle','yacc.py',149),
  ('fcall -> ID LPAR list_exp RPAR SEMICOMMA','fcall',5,'p_fcall','yacc.py',153),
  ('list_exp -> expression list_exp','list_exp',2,'p_list_exp','yacc.py',157),
  ('list_exp -> EMPTY','list_exp',1,'p_list_exp','yacc.py',158),
  ('list_exp -> COMMA list_exp','list_exp',2,'p_list_exp','yacc.py',159),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor','yacc.py',166),
  ('factor -> lopb id_cte','factor',2,'p_factor','yacc.py',167),
  ('factor -> id_cte','factor',1,'p_factor','yacc.py',168),
  ('id_cte -> ID','id_cte',1,'p_id_cte','yacc.py',176),
  ('id_cte -> cte','id_cte',1,'p_id_cte','yacc.py',177),
  ('conditions -> IF LPAR expression RPAR body haselse SEMICOMMA','conditions',7,'p_conditions','yacc.py',181),
  ('haselse -> ELSE body','haselse',2,'p_haselse','yacc.py',184),
  ('haselse -> EMPTY','haselse',1,'p_haselse','yacc.py',185),
  ('imprimir -> PRINT LPAR lst_printing_options RPAR SEMICOMMA','imprimir',5,'p_imprimir','yacc.py',192),
  ('lst_printing_options -> CTE_STRING COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',196),
  ('lst_printing_options -> expression','lst_printing_options',1,'p_lst_printing_options','yacc.py',197),
  ('lst_printing_options -> expression COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',198),
  ('lst_printing_options -> vars','lst_printing_options',1,'p_lst_printing_options','yacc.py',199),
  ('lst_printing_options -> vars COMMA lst_printing_options','lst_printing_options',3,'p_lst_printing_options','yacc.py',200),
  ('lst_printing_options -> CTE_STRING','lst_printing_options',1,'p_lst_printing_options','yacc.py',201),
  ('vars -> VAR lst_var','vars',2,'p_vars','yacc.py',208),
  ('lst_var -> lst_id DOUBLEPOINT type SEMICOMMA','lst_var',4,'p_lst_var','yacc.py',211),
  ('lst_var -> EMPTY','lst_var',1,'p_lst_var','yacc.py',212),
  ('lst_id -> ID lst_id','lst_id',2,'p_lst_id','yacc.py',237),
  ('lst_id -> COMMA lst_id','lst_id',2,'p_lst_id','yacc.py',238),
  ('lst_id -> EMPTY','lst_id',1,'p_lst_id','yacc.py',239),
  ('type -> INT','type',1,'p_type','yacc.py',251),
  ('type -> FLOAT','type',1,'p_type','yacc.py',252),
  ('type -> VOID','type',1,'p_type','yacc.py',253),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','yacc.py',257),
]
